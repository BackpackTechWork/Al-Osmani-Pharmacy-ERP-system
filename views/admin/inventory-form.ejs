<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/fontawesome/css/all.min.css">
  <style>
    .product-selection-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 12px;
      max-height: 400px;
      overflow-y: auto;
      padding: 16px;
      background: #f8f9fa;
      border-radius: 8px;
      border: 1px solid #ddd;
    }

    .product-checkbox-item {
      display: flex;
      align-items: center;
      gap: 12px;
      padding: 12px;
      background: white;
      border-radius: 6px;
      border: 2px solid #e0e0e0;
      transition: all 0.2s;
      cursor: pointer;
    }

    .product-checkbox-item:hover {
      border-color: var(--accent-color);
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .product-checkbox-item input[type="checkbox"] {
      width: 20px;
      height: 20px;
      cursor: pointer;
      flex-shrink: 0;
    }

    .product-checkbox-item.checked {
      border-color: var(--accent-color);
      background: #f0f7ff;
    }

    .product-checkbox-item.disabled {
      opacity: 0.5;
      cursor: not-allowed;
      background: #f5f5f5;
    }

    .product-info {
      flex: 1;
      min-width: 0;
    }

    .product-name {
      font-weight: 600;
      color: #333;
      margin-bottom: 4px;
      word-wrap: break-word;
    }

    .product-sku {
      font-size: 12px;
      color: #666;
      word-wrap: break-word;
    }

    .search-box {
      margin-bottom: 16px;
    }

    .search-box input {
      width: 100%;
      padding: 12px 16px;
      border: 2px solid #ddd;
      border-radius: 8px;
      font-size: 14px;
    }

    .search-box input:focus {
      outline: none;
      border-color: var(--accent-color);
    }

    .selection-summary {
      background: #e8f4f8;
      padding: 12px 16px;
      border-radius: 8px;
      margin-bottom: 16px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .bulk-actions {
      display: flex;
      gap: 8px;
    }

    .action-buttons {
      display: flex;
      gap: 12px;
      margin-top: 24px;
      flex-wrap: wrap;
    }

    .info-box {
      background: #fff3cd;
      border: 1px solid #ffc107;
      padding: 16px;
      border-radius: 8px;
      margin-top: 16px;
    }

    .info-box-content {
      display: flex;
      align-items: start;
      gap: 12px;
    }

    .info-box i {
      color: #856404;
      font-size: 20px;
      margin-top: 2px;
      flex-shrink: 0;
    }

    .info-box strong {
      color: #856404;
    }

    .info-box p {
      color: #856404;
      margin: 8px 0 0 0;
      font-size: 14px;
      line-height: 1.5;
    }

    @media (max-width: 768px) {
      body {
        font-size: 14px;
      }

      .main-content {
        padding: 12px 8px !important;
      }

      .container {
        max-width: 100% !important;
        padding: 0 !important;
      }

      .card {
        border-radius: 12px;
        margin: 0;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
      }

      .card-header {
        padding: 16px !important;
      }

      .card-header h1 {
        font-size: 18px !important;
        line-height: 1.3;
      }

      .card-header .card-title i {
        font-size: 16px;
      }

      .card-header p {
        font-size: 12px !important;
        line-height: 1.4;
      }

      .form-group {
        margin-bottom: 16px;
      }

      .form-label {
        font-size: 13px;
        margin-bottom: 6px;
        font-weight: 600;
      }

      .form-control, 
      .search-box input,
      select {
        font-size: 14px !important;
        padding: 10px 12px !important;
        border-radius: 8px;
      }

      .product-selection-grid {
        grid-template-columns: 1fr;
        gap: 8px;
        padding: 10px;
        max-height: calc(100vh - 450px);
        min-height: 200px;
      }

      .product-checkbox-item {
        padding: 12px 10px;
        gap: 10px;
      }

      .product-checkbox-item input[type="checkbox"] {
        width: 18px;
        height: 18px;
      }

      .product-name {
        font-size: 13px;
        line-height: 1.3;
      }

      .product-sku {
        font-size: 11px;
      }

      .selection-summary {
        flex-direction: column;
        align-items: stretch;
        gap: 10px;
        padding: 10px 12px;
      }

      .selection-summary span {
        font-size: 13px;
      }

      .bulk-actions {
        flex-direction: column;
        width: 100%;
        gap: 6px;
      }

      .bulk-actions button {
        width: 100%;
        padding: 8px 12px;
        font-size: 13px;
      }

      .action-buttons {
        flex-direction: column;
        gap: 8px;
        margin-top: 20px;
      }

      .btn {
        width: 100%;
        padding: 12px 16px !important;
        font-size: 14px !important;
        justify-content: center;
        border-radius: 8px;
      }

      .btn i {
        font-size: 13px;
      }

      .back-link {
        font-size: 13px;
        margin-bottom: 12px !important;
        display: inline-flex !important;
      }

      .info-box {
        padding: 12px;
      }

      .info-box-content {
        gap: 8px;
      }

      .info-box i {
        font-size: 16px;
      }

      .info-box p {
        font-size: 12px;
      }

      form[style*="display: inline"] {
        width: 100%;
      }

      small {
        font-size: 11px !important;
        display: block;
        margin-top: 4px;
        line-height: 1.4;
      }

      .form-control[disabled] {
        font-size: 13px !important;
        background: #f5f5f5 !important;
      }
    }

    @media (max-width: 480px) {
      .main-content {
        padding: 8px 4px !important;
      }

      .card-header {
        padding: 12px !important;
      }

      .card-header h1 {
        font-size: 16px !important;
      }

      .product-selection-grid {
        max-height: calc(100vh - 420px);
      }

      .btn {
        padding: 10px 14px !important;
        font-size: 13px !important;
      }
    }
  </style>
</head>
<body>
  <%- include('../components/sidebar', { currentPath: '/admin/inventory' }) %>
  
  <div class="main-content">
    <div style="min-height: 100vh; background-color: var(--bg-color); padding: 32px 20px;">
    <div class="container" style="max-width: 1000px;">
      <a href="/admin/inventory/stock-management<%= branchId ? '?branch=' + branchId : '' %>" class="back-link" style="display: inline-flex; align-items: center; gap: 8px; color: var(--accent-color); text-decoration: none; font-weight: 600; margin-bottom: 24px;">
        <i class="fas fa-arrow-left"></i>
        Back to Stock Management
      </a>
      
      <div class="card fade-in">
        <div class="card-header">
          <h1 class="card-title">
            <i class="fas fa-warehouse"></i>
            <% if (inventory) { %>
              View Inventory Item
            <% } else { %>
              Add Products to Branch
            <% } %>
          </h1>
          <% if (!inventory) { %>
            <p style="color: #666; font-size: 14px; margin-top: 8px;">Select multiple products to add to the branch inventory</p>
          <% } %>
        </div>
        
        <% if (inventory) { %>
          <div style="padding: 24px;">
            <div class="form-group">
              <label class="form-label">Product</label>
              <input type="text" class="form-control" value="<%= inventory.product_name %>" disabled style="background: #f5f5f5;">
            </div>
            
            <div class="form-group">
              <label class="form-label">Branch</label>
              <input type="text" class="form-control" value="<%= inventory.branch_name %>" disabled style="background: #f5f5f5;">
            </div>
            
            <div class="form-group">
              <label class="form-label">Added On</label>
              <input type="text" class="form-control" value="<%= new Date(inventory.created_at).toLocaleString() %>" disabled style="background: #f5f5f5;">
            </div>
            
            <div class="info-box">
              <div class="info-box-content">
                <i class="fas fa-info-circle"></i>
                <div>
                  <strong>About this inventory entry:</strong>
                  <p>
                    This entry represents that the product is available in this branch. 
                    To manage stock quantities, use the <strong>Restock</strong> feature. 
                    You can delete this entry to remove the product from this branch's inventory.
                  </p>
                </div>
              </div>
            </div>
            
            <div class="action-buttons">
              <a href="/admin/inventory/stock-management?branch=<%= branchId %>" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i>
                Back to Stock Management
              </a>
              <form action="/admin/inventory/delete/<%= inventory.id %>" method="POST" style="display: inline; flex: 1;" onsubmit="return confirm('Are you sure you want to remove this product from the branch inventory? This will not delete the product itself, only remove it from this branch.')">
                <input type="hidden" name="branchId" value="<%= branchId %>">
                <button type="submit" class="btn btn-danger">
                  <i class="fas fa-trash"></i>
                  Remove from Branch
                </button>
              </form>
            </div>
          </div>
        <% } else { %>
          <form action="/admin/inventory/add" method="POST" id="addInventoryForm" style="padding: 24px;">
          <input type="hidden" name="productIds" id="productIdsInput">
          
          <div class="form-group">
            <label class="form-label" for="branchId">Target Branch *</label>
            <select id="branchId" name="branchId" class="form-control" required onchange="updateAvailableProducts()">
              <option value="">Select Branch</option>
              <% branches.forEach(branch => { %>
                <option value="<%= branch.id %>" <%= branchId == branch.id ? 'selected' : '' %>>
                  <%= branch.name %>
                </option>
              <% }) %>
            </select>
            <small style="color: #666; font-size: 12px;">
              <i class="fas fa-info-circle" style="color: var(--accent-color);"></i>
              Products already in this branch will be disabled
            </small>
          </div>

          <div class="selection-summary" id="selectionSummary" style="display: none;">
            <span><strong id="selectedCount">0</strong> product(s) selected</span>
            <div class="bulk-actions">
              <button type="button" class="btn btn-sm btn-outline" onclick="selectAll()">
                <i class="fas fa-check-double"></i> Select All Available
              </button>
              <button type="button" class="btn btn-sm btn-outline" onclick="clearSelection()">
                <i class="fas fa-times"></i> Clear Selection
              </button>
            </div>
          </div>

          <div class="search-box">
            <input 
              type="text" 
              id="productSearch" 
              placeholder="Search products by name or SKU..." 
              onkeyup="filterProducts()"
            >
          </div>

          <div class="product-selection-grid" id="productGrid">
            <% products.forEach(product => { %>
              <label class="product-checkbox-item" data-product-id="<%= product.id %>" data-name="<%= product.name.toLowerCase() %>" data-sku="<%= product.sku.toLowerCase() %>">
                <input 
                  type="checkbox" 
                  value="<%= product.id %>" 
                  onchange="updateSelection()"
                  <% if (product.in_branch) { %>disabled<% } %>
                >
                <div class="product-info">
                  <div class="product-name"><%= product.name %></div>
                  <div class="product-sku">SKU: <%= product.sku %></div>
                </div>
              </label>
            <% }) %>
          </div>
          
          <div class="action-buttons">
            <button type="submit" class="btn btn-primary" id="submitBtn" disabled>
              <i class="fas fa-plus"></i>
              Add Selected Products
            </button>
            <button type="button" class="btn btn-success" id="addAndRestockBtn" onclick="submitWithRestock()" disabled>
              <i class="fas fa-plus-circle"></i>
              Add & Restock
            </button>
            <a href="/admin/inventory/stock-management<%= branchId ? '?branch=' + branchId : '' %>" class="btn btn-secondary">
              <i class="fas fa-times"></i>
              Cancel
            </a>
          </div>
          </form>
        <% } %>
      </div>
    </div>
  </div>
  </div>

  <% if (!inventory) { %>
  <script>
    const existingInventory = <%- JSON.stringify(existingInventory || {}) %>;

    function updateSelection() {
      const checkboxes = document.querySelectorAll('.product-checkbox-item input[type="checkbox"]:not(:disabled)');
      const checked = Array.from(checkboxes).filter(cb => cb.checked);
      const count = checked.length;
      
      document.getElementById('selectedCount').textContent = count;
      document.getElementById('selectionSummary').style.display = count > 0 ? 'flex' : 'none';
      document.getElementById('submitBtn').disabled = count === 0;
      document.getElementById('addAndRestockBtn').disabled = count === 0;
      
      document.querySelectorAll('.product-checkbox-item').forEach(item => {
        const checkbox = item.querySelector('input[type="checkbox"]');
        if (checkbox.checked) {
          item.classList.add('checked');
        } else {
          item.classList.remove('checked');
        }
      });
    }

    function selectAll() {
      const checkboxes = document.querySelectorAll('.product-checkbox-item input[type="checkbox"]:not(:disabled)');
      checkboxes.forEach(cb => {
        if (cb.closest('.product-checkbox-item').style.display !== 'none') {
          cb.checked = true;
        }
      });
      updateSelection();
    }

    function clearSelection() {
      const checkboxes = document.querySelectorAll('.product-checkbox-item input[type="checkbox"]');
      checkboxes.forEach(cb => cb.checked = false);
      updateSelection();
    }

    function filterProducts() {
      const search = document.getElementById('productSearch').value.toLowerCase();
      const items = document.querySelectorAll('.product-checkbox-item');
      
      items.forEach(item => {
        const name = item.dataset.name;
        const sku = item.dataset.sku;
        
        if (name.includes(search) || sku.includes(search)) {
          item.style.display = 'flex';
        } else {
          item.style.display = 'none';
        }
      });
    }

    function updateAvailableProducts() {
      const branchId = document.getElementById('branchId').value;
      if (!branchId) return;

      const existing = existingInventory[branchId] || [];
      
      document.querySelectorAll('.product-checkbox-item').forEach(item => {
        const productId = item.dataset.productId;
        const checkbox = item.querySelector('input[type="checkbox"]');
        const alreadyExists = existing.includes(parseInt(productId));
        
        if (alreadyExists) {
          checkbox.disabled = true;
          checkbox.checked = false;
          item.classList.add('disabled');
          
          let indicator = item.querySelector('.already-in-branch-indicator');
          if (!indicator) {
            indicator = document.createElement('div');
            indicator.className = 'already-in-branch-indicator';
            indicator.style.cssText = 'color: #f44336; font-size: 11px; margin-top: 4px;';
            indicator.innerHTML = '<i class="fas fa-check-circle"></i> Already in branch';
            item.querySelector('.product-info').appendChild(indicator);
          }
        } else {
          checkbox.disabled = false;
          item.classList.remove('disabled');
          
          const indicator = item.querySelector('.already-in-branch-indicator');
          if (indicator) indicator.remove();
        }
      });
      
      updateSelection();
    }

    function submitWithRestock() {
      const checkboxes = document.querySelectorAll('.product-checkbox-item input[type="checkbox"]:checked');
      const productIds = Array.from(checkboxes).map(cb => cb.value);
      const branchId = document.getElementById('branchId').value;
      
      if (productIds.length === 0) {
        alert('Please select at least one product');
        return false;
      }
      
      if (!branchId) {
        alert('Please select a branch');
        return false;
      }
      
      document.getElementById('productIdsInput').value = JSON.stringify(productIds);
      document.getElementById('addInventoryForm').action = '/admin/inventory/add-and-restock';
      document.getElementById('addInventoryForm').submit();
    }

    document.getElementById('addInventoryForm').addEventListener('submit', function(e) {
      const checkboxes = document.querySelectorAll('.product-checkbox-item input[type="checkbox"]:checked');
      const productIds = Array.from(checkboxes).map(cb => cb.value);
      
      if (productIds.length === 0) {
        e.preventDefault();
        alert('Please select at least one product');
        return false;
      }
      
      document.getElementById('productIdsInput').value = JSON.stringify(productIds);
    });

    updateSelection();
    updateAvailableProducts();
  </script>
  <% } %>
</body>
</html>