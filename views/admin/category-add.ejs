<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/fontawesome/css/all.min.css">
  <style>
    .bulk-form-container {
      max-width: 1000px;
      margin: 0 auto;
      padding: 20px;
    }

    .category-input-group {
      border: 1px solid #ddd;
      border-radius: 12px;
      padding: 24px;
      margin-bottom: 20px;
      background: #f9f9f9;
      position: relative;
      transition: all 0.3s ease;
    }

    .category-input-group:hover {
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .category-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .category-title {
      margin: 0;
      color: #333;
      font-size: 18px;
      font-weight: 600;
    }

    .remove-category-btn {
      background: #dc3545;
      color: white;
      border: none;
      border-radius: 6px;
      padding: 8px 12px;
      cursor: pointer;
      font-size: 14px;
      transition: all 0.2s;
    }

    .remove-category-btn:hover {
      background: #c82333;
      transform: translateY(-1px);
    }

    .form-actions {
      display: flex;
      gap: 12px;
      margin-top: 30px;
      padding-top: 20px;
      border-top: 1px solid #eee;
    }

    .add-category-btn {
      background: #28a745;
      color: white;
      border: none;
      border-radius: 8px;
      padding: 12px 20px;
      cursor: pointer;
      font-size: 14px;
      font-weight: 500;
      transition: all 0.2s;
    }

    .add-category-btn:hover {
      background: #218838;
      transform: translateY(-1px);
    }

    .clear-all-btn {
      background: #6c757d;
      color: white;
      border: none;
      border-radius: 8px;
      padding: 12px 20px;
      cursor: pointer;
      font-size: 14px;
      font-weight: 500;
      transition: all 0.2s;
      gap: 8px;
    }

    .clear-all-btn:hover {
      background: #5a6268;
      transform: translateY(-1px);
    }

    .submit-btn {
      background: var(--accent-color);
      color: white;
      border: none;
      border-radius: 8px;
      padding: 12px 24px;
      cursor: pointer;
      font-size: 16px;
      font-weight: 600;
      transition: all 0.2s;
    }

    .submit-btn:hover {
      background: #45a049;
      transform: translateY(-1px);
    }

    .cancel-btn {
      background: #6c757d;
      color: white;
      border: none;
      border-radius: 8px;
      padding: 12px 24px;
      cursor: pointer;
      font-size: 16px;
      font-weight: 500;
      transition: all 0.2s;
      text-decoration: none;
      display: inline-block;
    }

    .cancel-btn:hover {
      background: #5a6268;
      transform: translateY(-1px);
      color: white;
      text-decoration: none;
    }

    .form-group {
      margin-bottom: 20px;
    }

    .form-label {
      display: block;
      margin-bottom: 8px;
      font-weight: 600;
      color: #333;
    }

    .form-control {
      width: 100%;
      padding: 12px 16px;
      border: 1px solid #ddd;
      border-radius: 8px;
      font-size: 14px;
      transition: all 0.2s;
    }

    .form-control:focus {
      outline: none;
      border-color: var(--accent-color);
      box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
    }

    .page-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
      padding-bottom: 20px;
      border-bottom: 2px solid #eee;
    }

    .page-title {
      font-size: 28px;
      font-weight: 700;
      color: #333;
      margin: 0;
    }

    .back-btn {
      background: #6c757d;
      color: white;
      border: none;
      border-radius: 8px;
      padding: 10px 16px;
      cursor: pointer;
      font-size: 14px;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 8px;
      transition: all 0.2s;
    }

    .back-btn:hover {
      background: #5a6268;
      color: white;
      text-decoration: none;
      transform: translateY(-1px);
    }

    .categories-container {
      min-height: 200px;
    }

    .empty-state {
      text-align: center;
      padding: 60px 20px;
      color: #666;
    }

    .empty-state i {
      font-size: 48px;
      margin-bottom: 16px;
      opacity: 0.5;
    }

    .empty-state h3 {
      font-size: 20px;
      margin-bottom: 8px;
    }

    .empty-state p {
      font-size: 16px;
      margin-bottom: 20px;
    }

    @media (max-width: 768px) {
      .bulk-form-container {
        padding: 15px;
      }
      
      .page-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 15px;
      }
      
      .form-actions {
        flex-direction: column;
      }
      
      .category-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
      }
    }
  </style>
</head>
<body>
  <%- include('../components/sidebar', { currentPath: '/admin/categories' }) %>
  
  <div class="main-content">
    <div style="min-height: 100vh; background-color: var(--bg-color); padding: 32px 20px;" data-is-edit="<%= isEdit %>">
      <div class="bulk-form-container">
        <div class="page-header">
          <h1 class="page-title">
            <i class="fas fa-<%= isEdit ? 'edit' : 'plus' %>"></i> <%= isEdit ? 'Edit Category' : 'Add Category' %>
          </h1>
          <a href="/admin/categories" class="back-btn">
            <i class="fas fa-arrow-left"></i>
            Back to Categories
          </a>
        </div>
        
        <% if (typeof success !== 'undefined' && success) { %>
          <div class="alert alert-success">
            <i class="fas fa-check-circle"></i>
            <%= success %>
          </div>
        <% } %>
        
        <% if (typeof error !== 'undefined' && error) { %>
          <div class="alert alert-error">
            <i class="fas fa-exclamation-circle"></i>
            <%= error %>
          </div>
        <% } %>

        <form id="bulkAddForm" action="<%= isEdit && category ? `/admin/categories/edit/${category.id}` : '/admin/categories/add' %>" method="POST">
          <% if (isEdit && category) { %>
            <input type="hidden" name="editId" value="<%= category.id %>">
            <input type="hidden" id="editCategoryName" value="<%= category.name.replace(/'/g, "\\'") %>">
            <input type="hidden" id="editCategoryDescription" value="<%= (category.description || '').replace(/'/g, "\\'").replace(/\n/g, ' ') %>">
          <% } %>
          <div id="categoriesContainer" class="categories-container">
            <!-- Category inputs will be added here dynamically -->
          </div>
          
          <% if (!isEdit) { %>
          <div class="form-actions">
            <button type="button" class="add-category-btn" onclick="addCategoryInput()">
              <i class="fas fa-plus"></i> Add Another Category
            </button>
            <button type="button" class="clear-all-btn" onclick="clearAllCategories()">
              <i class="fas fa-trash"></i> Clear All
            </button>
          </div>
          <% } %>
          
          <div style="display: flex; gap: 12px; margin-top: 30px;">
            <button type="submit" class="submit-btn">
              <i class="fas fa-save"></i> <%= isEdit ? 'Update Category' : 'Save Categories' %>
            </button>
            <a href="/admin/categories" class="cancel-btn">
              <i class="fas fa-times"></i> Cancel
            </a>
          </div>
        </form>
      </div>
    </div>
  </div>
  
  <script>

    document.addEventListener('DOMContentLoaded', () => {
      const alerts = document.querySelectorAll('.alert');
      if (alerts.length > 0) {
        setTimeout(() => {
          alerts.forEach(alert => {
            alert.style.transition = 'opacity 0.5s ease';
            alert.style.opacity = '0';
            setTimeout(() => alert.remove(), 500);
          });
        }, 3000);
      }
    });
  
    let categoryCount = 0;
  
    function addCategoryInput(name = '', description = '') {
      const isEdit = document.querySelector('[data-is-edit]').getAttribute('data-is-edit') === 'true';
      

      if (isEdit && categoryCount > 0) {
        return;
      }
      
      categoryCount++;
      const container = document.getElementById('categoriesContainer');
      
      const categoryDiv = document.createElement('div');
      categoryDiv.className = 'category-input-group';
      
      categoryDiv.innerHTML = `
        <div class="category-header">
          <h4 class="category-title">${isEdit ? 'Edit Category' : `Category ${categoryCount}`}</h4>
          ${!isEdit ? `<button type="button" class="remove-category-btn" onclick="removeCategoryInput(this)">
            <i class="fas fa-trash"></i>
          </button>` : ''}
        </div>
        <div class="form-group">
          <label class="form-label">Category Name *</label>
          <input type="text" name="${isEdit ? 'name' : `categories[${categoryCount}][name]`}" class="form-control" required 
                 placeholder="Enter category name" value="${name}">
        </div>
        <div class="form-group">
          <label class="form-label">Description</label>
          <textarea name="${isEdit ? 'description' : `categories[${categoryCount}][description]`}" class="form-control" rows="3" 
                    placeholder="Enter category description (optional)">${description}</textarea>
        </div>
      `;
      
      container.appendChild(categoryDiv);
      updateCategoryNumbers();
      updateEmptyState();
      toggleClearAllButton();
    }
  
    function removeCategoryInput(button) {
      const groups = document.querySelectorAll('.category-input-group');
      if (groups.length > 1) {
        button.closest('.category-input-group').remove();
        updateCategoryNumbers();
        updateEmptyState();
        toggleClearAllButton();
      } else {
        alert('You must have at least one category input.');
      }
    }
  
    function clearAllCategories() {
      const container = document.getElementById('categoriesContainer');
      container.innerHTML = '';
      categoryCount = 0;
      addCategoryInput(); 
      updateEmptyState();
      toggleClearAllButton();
    }
  
    function updateCategoryNumbers() {
      const groups = document.querySelectorAll('.category-input-group');
      groups.forEach((group, index) => {
        const title = group.querySelector('.category-title');
        title.textContent = `Category ${index + 1}`;
      });
    }
  
    function updateEmptyState() {
      const container = document.getElementById('categoriesContainer');
      const groups = document.querySelectorAll('.category-input-group');
      
      if (groups.length === 0) {
        container.innerHTML = `
          <div class="empty-state">
            <i class="fas fa-layer-group"></i>
            <h3>No Categories Added</h3>
            <p>Click "Add Category" to start adding categories</p>
          </div>
        `;
      }
    }
  
    function toggleClearAllButton() {
      const clearBtn = document.querySelector('.clear-all-btn');
      const groups = document.querySelectorAll('.category-input-group');
      if (clearBtn) {
        clearBtn.style.display = groups.length > 1 ? 'inline-flex' : 'none';
      }
    }
  

    document.addEventListener('DOMContentLoaded', () => {
      const isEdit = document.querySelector('[data-is-edit]').getAttribute('data-is-edit') === 'true';
      
      if (isEdit) {
        const nameInput = document.getElementById('editCategoryName');
        const descInput = document.getElementById('editCategoryDescription');
        if (nameInput && descInput) {
          addCategoryInput(nameInput.value, descInput.value);
        } else {
          addCategoryInput();
        }
      } else {
        addCategoryInput();
      }
      toggleClearAllButton();
    });
  </script>
  
</body>
</html>
