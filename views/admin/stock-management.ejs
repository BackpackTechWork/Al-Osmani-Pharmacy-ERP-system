<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/fontawesome/css/all.min.css">
  <style>
    .view-toggle {
      display: flex;
      gap: 8px;
      background: white;
      padding: 4px;
      border-radius: 8px;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }
    
    .view-toggle button {
      padding: 8px 16px;
      border: none;
      background: transparent;
      cursor: pointer;
      border-radius: 6px;
      color: #666;
      transition: all 0.2s;
      display: flex;
      align-items: center;
      gap: 6px;
    }
    
    .view-toggle button.active {
      background: var(--accent-color);
      color: white;
    }
    
    .view-toggle button:hover:not(.active) {
      background: #f5f5f5;
    }
    
    .inventory-grid {
      display: none;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
      margin-top: 24px;
    }
    
    .inventory-grid.active {
      display: grid;
    }
    
    .inventory-card {
      background: white;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      transition: all 0.3s;
    }
    
    .inventory-card:hover {
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
      transform: translateY(-2px);
    }
    
    .inventory-card-image {
      width: 100%;
      height: 180px;
      background: #f5f5f5;
      display: flex;
      align-items: center;
      justify-content: center;
      color: #ccc;
      font-size: 48px;
      position: relative;
    }
    
    .inventory-card-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .inventory-card-body {
      padding: 20px;
    }
    
    .inventory-card-title {
      font-size: 18px;
      font-weight: 700;
      color: #333;
      margin: 0 0 4px 0;
    }
    
    .inventory-card-sku {
      font-size: 12px;
      color: #999;
      font-family: monospace;
      margin-bottom: 12px;
    }
    
    .inventory-card-info {
      display: flex;
      flex-direction: column;
      gap: 8px;
      margin-bottom: 16px;
    }
    
    .inventory-card-info-item {
      display: flex;
      align-items: center;
      justify-content: space-between;
      font-size: 14px;
      color: #666;
    }
    
    .inventory-card-actions {
      display: flex;
      gap: 8px;
      padding-top: 16px;
      border-top: 1px solid #eee;
      align-items: center;
    }
    
    .table-container {
      display: none;
    }
    
    .table-container.active {
      display: block;
    }
    
    .pagination {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 8px;
      margin-top: 32px;
      padding-top: 24px;
      border-top: 1px solid #eee;
    }
    
    .pagination a,
    .pagination span {
      padding: 8px 12px;
      border-radius: 6px;
      text-decoration: none;
      color: #666;
      transition: all 0.2s;
    }
    
    .pagination a {
      background: white;
      border: 1px solid #ddd;
    }
    
    .pagination a:hover {
      background: var(--accent-color);
      color: white;
      border-color: var(--accent-color);
    }
    
    .pagination .current {
      background: var(--accent-color);
      color: white;
      font-weight: 600;
      border: 1px solid var(--accent-color);
    }
    
    .pagination .disabled {
      opacity: 0.4;
      cursor: not-allowed;
      pointer-events: none;
    }
    
    .pagination-info {
      color: #666;
      font-size: 14px;
      margin-left: 16px;
    }
    
    .search-filter-bar {
      display: flex;
      gap: 12px;
      margin-bottom: 24px;
      flex-wrap: wrap;
    }
    
    .search-box {
      flex: 1;
      min-width: 250px;
      position: relative;
    }
    
    .search-box input {
      width: 100%;
      padding: 12px 16px 12px 44px;
      border: 1px solid #ddd;
      border-radius: 8px;
      font-size: 14px;
      transition: all 0.2s;
    }
    
    .search-box input:focus {
      outline: none;
      border-color: var(--accent-color);
      box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
    }
    
    .search-box i {
      position: absolute;
      left: 16px;
      top: 50%;
      transform: translateY(-50%);
      color: #999;
    }
    
    .filter-box {
      position: relative;
    }
    
    .filter-box select {
      padding: 12px 40px 12px 16px;
      border: 1px solid #ddd;
      border-radius: 8px;
      font-size: 14px;
      background: white;
      cursor: pointer;
      appearance: none;
      transition: all 0.2s;
      min-width: 160px;
    }
    
    .filter-box select:focus {
      outline: none;
      border-color: var(--accent-color);
      box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
    }
    
    .filter-box i {
      position: absolute;
      right: 16px;
      top: 50%;
      transform: translateY(-50%);
      color: #999;
      pointer-events: none;
    }
    
    .clear-filters {
      padding: 12px 20px;
      background: #f5f5f5;
      border: 1px solid #ddd;
      border-radius: 8px;
      color: #666;
      cursor: pointer;
      transition: all 0.2s;
      font-size: 14px;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    
    .clear-filters:hover {
      background: #e0e0e0;
    }

    /* Custom Multi-Select Styles */
    .custom-multiselect {
      position: relative;
      min-width: 200px;
    }

    .multiselect-container {
      position: relative;
      width: 100%;
    }

    .multiselect-input {
      min-height: 48px;
      padding: 8px 12px;
      border: 2px solid #ddd;
      border-radius: 8px;
      background: white;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: space-between;
      transition: all 0.2s ease;
      flex-wrap: wrap;
      gap: 6px;
    }

    .multiselect-input:hover {
      border-color: #bbb;
    }

    .multiselect-input:focus-within {
      border-color: var(--accent-color);
      box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
    }

    .multiselect-input.open {
      border-color: var(--accent-color);
      box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
    }

    .selected-chips {
      display: flex;
      flex-wrap: wrap;
      gap: 6px;
      flex: 1;
      min-height: 20px;
    }

    .chip {
      background: var(--accent-color);
      color: white;
      padding: 6px 12px;
      border-radius: 20px;
      font-size: 13px;
      font-weight: 500;
      display: inline-flex;
      align-items: center;
      gap: 8px;
      white-space: nowrap;
      animation: chipSlideIn 0.2s ease;
      margin: 2px;
      position: relative;
      transition: all 0.2s ease;
      border: 2px solid transparent;
    }

    .chip:hover {
      background: #45a049;
      transform: translateY(-1px);
      box-shadow: 0 2px 8px rgba(76, 175, 80, 0.3);
    }

    .chip .chip-remove {
      cursor: pointer;
      font-size: 12px;
      opacity: 0.8;
      transition: all 0.2s ease;
      padding: 2px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 18px;
      height: 18px;
      background: rgba(255, 255, 255, 0.2);
      color: white;
    }

    .chip .chip-remove i {
      color: white;
    }

    .chip .chip-remove:hover {
      opacity: 1;
      background: rgba(255, 255, 255, 0.3);
      transform: scale(1.1);
    }

    .placeholder {
      color: #999;
      font-size: 14px;
      pointer-events: none;
    }

    .placeholder.hidden {
      display: none;
    }

    .dropdown-icon {
      color: #666;
      transition: transform 0.2s ease;
      pointer-events: none;
    }

    .multiselect-input.open .dropdown-icon {
      transform: rotate(180deg);
    }

    .multiselect-dropdown {
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      background: white;
      border: 2px solid var(--accent-color);
      border-top: none;
      border-radius: 0 0 8px 8px;
      max-height: 200px;
      overflow-y: auto;
      z-index: 1000;
      display: none;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .multiselect-dropdown.show {
      display: block;
      animation: dropdownSlide 0.2s ease;
    }

    .dropdown-option {
      padding: 12px 16px;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 10px;
      transition: all 0.2s ease;
      border-bottom: 1px solid #f0f0f0;
    }

    .dropdown-option:last-child {
      border-bottom: none;
    }

    .dropdown-option:hover {
      background: #f8f9fa;
    }

    .dropdown-option.selected {
      background: #e8f5e8;
      color: var(--accent-color);
    }

    .dropdown-option i {
      color: var(--accent-color);
      font-size: 12px;
      opacity: 0;
      transition: opacity 0.2s ease;
    }

    .dropdown-option.selected i {
      opacity: 1;
    }

    .dropdown-option.selected {
      opacity: 0.5;
      pointer-events: none;
      background: #f9f9f9;
    }

    @keyframes chipSlideIn {
      from {
        opacity: 0;
        transform: scale(0.8);
      }
      to {
        opacity: 1;
        transform: scale(1);
      }
    }

    @keyframes dropdownSlide {
      from {
        opacity: 0;
        transform: translateY(-10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Mobile Responsive */
    @media (max-width: 768px) {
      .custom-multiselect {
        min-width: 100%;
      }
      
      .multiselect-input {
        min-height: 44px;
        padding: 6px 10px;
      }
      
      .chip {
        font-size: 11px;
        padding: 4px 8px;
        margin: 1px;
      }
      
      .chip .chip-remove {
        width: 16px;
        height: 16px;
        font-size: 10px;
      }
      
      .multiselect-dropdown {
        max-height: 150px;
      }
    }

    /* Bulk Actions */
    .bulk-actions {
      background: #f8f9fa;
      padding: 16px;
      border-radius: 8px;
      margin-bottom: 20px;
      display: none;
    }
    
    .bulk-actions.active {
      display: block;
    }
    
    .bulk-actions-content {
      display: flex;
      gap: 12px;
      align-items: center;
      flex-wrap: wrap;
    }

    .inventory-checkbox {
      width: 18px;
      height: 18px;
      cursor: pointer;
      accent-color: var(--accent-color);
    }
    
    .inventory-card-actions .inventory-checkbox {
      flex-shrink: 0;
    }
    
    .card-checkbox {
      position: absolute;
      top: 12px;
      left: 12px;
      width: 20px;
      height: 20px;
      z-index: 10;
      background: rgba(255, 255, 255, 0.9);
      border-radius: 4px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      border: 2px solid #ddd;
      transition: all 0.2s ease;
    }
    
    .card-checkbox:hover {
      background: rgba(255, 255, 255, 1);
      border-color: var(--accent-color);
      transform: scale(1.1);
    }
    
    .card-checkbox:checked {
      background: var(--accent-color);
      border-color: var(--accent-color);
    }

    /* Mobile: Force card view */
    @media (max-width: 768px) {
      .view-toggle {
        display: none;
      }
      
      .inventory-grid {
        display: grid !important;
        grid-template-columns: 1fr;
      }
      
      .table-container {
        display: none !important;
      }
      
      .flex-between {
        flex-direction: column;
        align-items: stretch !important;
        gap: 16px;
      }
      
      .flex-between > div:last-child {
        display: flex;
        flex-direction: column;
        gap: 12px;
      }
      
      .search-filter-bar {
        flex-direction: column;
      }
      
      .search-box,
      .filter-box select {
        width: 100%;
        min-width: 100%;
      }
      
      .pagination {
        flex-wrap: wrap;
        gap: 6px;
      }
      
      .pagination-info {
        width: 100%;
        text-align: center;
        margin-left: 0;
        margin-top: 8px;
      }
    }

    .skeleton-wrapper {
      margin-top: 24px;
      display: none;
      opacity: 0;
      transition: opacity 0.3s ease;
      pointer-events: none;
    }

    .skeleton-wrapper.active {
      display: block;
      opacity: 1;
    }

    .skeleton-table {
      width: 100%;
      border-collapse: collapse;
    }

    .skeleton-row {
      height: 44px;
      border-bottom: 1px solid #ddd;
    }

    .skeleton-cell {
      height: 16px;
      border-radius: 6px;
      background: #e2e2e2;
      position: relative;
      overflow: hidden;
    }

    .skeleton-cell::after {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.6), transparent);
      animation: shimmer 1.2s infinite;
    }

    .skeleton-table td {
      padding: 12px;
    }

    .skeleton-card-grid {
      display: none;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
    }

    .skeleton-card-grid.active {
      display: grid;
    }

    .skeleton-card {
      background: #e2e2e2;
      border-radius: 12px;
      height: 380px;
      position: relative;
      overflow: hidden;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }

    .skeleton-card::after {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.6), transparent);
      animation: shimmer 1.2s infinite;
    }

    @keyframes shimmer {
      100% {
        left: 100%;
      }
    }

    @media (max-width: 768px) {
      .skeleton-table {
        display: none !important;
      }
      .skeleton-card-grid {
        display: grid !important;
        grid-template-columns: 1fr;
      }
    }

    /* Modal Styles */
    .modal-overlay {
      position: fixed;
      inset: 0;
      background: rgba(0,0,0,0.4);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 10000;
      animation: fadeIn 0.2s ease;
    }

    .modal-box {
      background: #fff;
      border-radius: 12px;
      padding: 24px 28px;
      max-width: 400px;
      width: 90%;
      box-shadow: 0 4px 20px rgba(0,0,0,0.15);
      animation: slideIn 0.25s ease;
      text-align: center;
    }

    .modal-header {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;
      margin-bottom: 12px;
    }

    .modal-header i {
      font-size: 24px;
      color: var(--accent-color, #4CAF50);
    }

    .modal-actions {
      margin-top: 20px;
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    @keyframes slideIn {
      from { transform: translateY(-15px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }

    .btn-sm {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 6px;
      font-size: 14px;
      padding: 8px 12px;
      height: 36px;
      box-sizing: border-box;
      text-align: center;
    }

    .table-container td > div,
    .inventory-card-actions {
      display: flex;
      gap: 8px;
    }

  </style>
</head>
<body>
  <%- include('../components/sidebar', { currentPath: '/admin/inventory/stock-management' }) %>
  
  <div class="main-content">
    <div style="min-height: 100vh; background-color: var(--bg-color); padding: 32px 20px;">
    <div class="container">
      <div class="flex-between mb-3">
        <div>
          <h1 style="font-size: 32px; font-weight: 700; margin-bottom: 8px;">
            <i class="fas fa-box"></i> Stock Management
          </h1>
          <p style="color: #666;">Monitor and manage stock across all branches</p>
        </div>
        
        <div style="display: flex; gap: 12px; align-items: center;">
          <% if (selectedBranch) { %>
            <div class="view-toggle">
              <button id="tableViewBtn" class="active" onclick="switchView('table')">
                <i class="fas fa-table"></i>
                Table
              </button>
              <button id="cardViewBtn" onclick="switchView('card')">
                <i class="fas fa-th"></i>
                Cards
              </button>
            </div>
            <select class="form-control" style="width: 250px;" onchange="window.location.href='/admin/inventory/stock-management?branch=' + this.value">
              <% branches.forEach(branch => { %>
                <option value="<%= branch.id %>" <%= selectedBranch === branch.id ? 'selected' : '' %>>
                  <%= branch.name %>
                </option>
              <% }) %>
            </select>
            <a href="/admin/inventory/add?branch=<%= selectedBranch %>" class="btn btn-primary">
              <i class="fas fa-plus"></i>
              Add Products
            </a>
          <% } %>
        </div>
      </div>
      
      <% if (typeof success !== 'undefined' && success) { %>
        <div class="alert alert-success">
          <i class="fas fa-check-circle"></i>
          <%= success %>
        </div>
      <% } %>
      
      <% if (typeof error !== 'undefined' && error) { %>
        <div class="alert alert-error">
          <i class="fas fa-exclamation-circle"></i>
          <%= error %>
        </div>
      <% } %>
      
      <% if (selectedBranch) { %>
        <!-- Search and Filter Bar -->
        <div class="search-filter-bar">
          <div class="search-box">
            <i class="fas fa-search"></i>
            <input 
              type="text" 
              id="searchInput" 
              placeholder="Search by product name or SKU..." 
              value="<%= search %>"
            >
          </div>
          
          <div class="filter-box custom-multiselect">
            <div class="multiselect-container" id="categoryMultiselect">
              <div class="multiselect-input" onclick="toggleDropdown()">
                <div class="selected-chips" id="selectedChips">
                  <% if (Array.isArray(categoryFilter) && categoryFilter.length > 0) { %>
                    <% categoryFilter.forEach(catId => { %>
                      <% const category = categories.find(c => c.id.toString() === catId.toString()) %>
                      <% if (category) { %>
                        <span class="chip" data-value="<%= category.id %>">
                          <%= category.name %>
                          <span class="chip-remove" onclick="removeChip(event, '<%= category.id %>')">
                            <i class="fas fa-times"></i>
                          </span>
                        </span>
                      <% } %>
                    <% }) %>
                  <% } else if (categoryFilter) { %>
                    <% const category = categories.find(c => c.id.toString() === categoryFilter.toString()) %>
                    <% if (category) { %>
                      <span class="chip" data-value="<%= category.id %>">
                        <%= category.name %>
                        <span class="chip-remove" onclick="removeChip(event, '<%= category.id %>')">
                          <i class="fas fa-times"></i>
                        </span>
                      </span>
                    <% } %>
                  <% } %>
                  <span class="placeholder" id="placeholder">Select categories...</span>
                </div>
                <i class="fas fa-chevron-down dropdown-icon"></i>
              </div>
              <div class="multiselect-dropdown" id="categoryDropdown">
                <% categories.forEach(category => { %>
                  <div class="dropdown-option <%= ((Array.isArray(categoryFilter) && categoryFilter.includes(category.id.toString())) || categoryFilter == category.id) ? 'selected' : '' %>"
                       data-value="<%= category.id %>" 
                       data-name="<%= category.name %>"
                       onclick="toggleOption(this)">
                    <%= category.name %>
                  </div>
                <% }) %>
              </div>
            </div>
          </div>
          
          <div class="filter-box">
            <select id="stockStatusFilter">
              <option value="">All Stock Status</option>
              <option value="critical" <%= stockStatusFilter === 'critical' ? 'selected' : '' %>>🟡 Critical</option>
              <option value="reorder" <%= stockStatusFilter === 'reorder' ? 'selected' : '' %>>🔴 Reorder</option>
              <option value="in_stock" <%= stockStatusFilter === 'in_stock' ? 'selected' : '' %>>🟢 In Stock</option>
            </select>
            <i class="fas fa-chevron-down"></i>
          </div>
          
          <% if (search || categoryFilter || stockStatusFilter) { %>
            <button class="clear-filters" onclick="clearFilters()">
              <i class="fas fa-times"></i>
              Clear Filters
            </button>
          <% } %>
        </div>

        <!-- Bulk Actions -->
        <div id="bulkActions" class="bulk-actions">
          <div class="bulk-actions-content">
            <span id="selectedCount">0 items selected</span>
            <button class="btn btn-outline" onclick="clearSelection()">
              <i class="fas fa-times"></i> Clear Selection
            </button>
            <button class="btn btn-primary" onclick="goToBulkRestock()">
              <i class="fas fa-boxes"></i> Bulk Restock
            </button>
            <button class="btn btn-danger" onclick="bulkDelete()">
              <i class="fas fa-trash"></i> Delete Selected
            </button>
          </div>
        </div>

        <!-- Skeleton Loading -->
        <div id="skeletonWrapper" class="skeleton-wrapper active">
          <table class="skeleton-table">
            <tbody>
              <% for (let i = 0; i < 6; i++) { %>
                <tr class="skeleton-row">
                  <td><div class="skeleton-cell" style="width: 30%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 18%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 12%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 10%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 10%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 10%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 10%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 10%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 8%;"></div></td>
                </tr>
              <% } %>
            </tbody>
          </table>
        
          <div class="skeleton-card-grid">
            <div class="skeleton-card"></div>
            <div class="skeleton-card"></div>
            <div class="skeleton-card"></div>
          </div>
        </div>

        <!-- Table View -->
        <div class="table-container active fade-in">
          <% if (inventory.length === 0) { %>
            <div style="text-align: center; padding: 60px 20px; color: #999;">
              <i class="fas fa-search" style="font-size: 64px; margin-bottom: 20px; opacity: 0.3;"></i>
              <h3 style="font-size: 24px; font-weight: 600; color: #666; margin-bottom: 12px;">No Products Found</h3>
              <p style="font-size: 16px;">Try adjusting your search or filters, or add products to this branch.</p>
              <% if (search || categoryFilter) { %>
                <button onclick="clearFilters()" class="btn btn-primary" style="margin-top: 20px;">
                  <i class="fas fa-times"></i> Clear Filters
                </button>
              <% } else { %>
                <a href="/admin/inventory/add?branch=<%= selectedBranch %>" class="btn btn-primary" style="margin-top: 20px;">
                  <i class="fas fa-plus"></i> Add Products
                </a>
              <% } %>
            </div>
          <% } else { %>
          <table>
            <thead>
              <tr>
                <th>
                  <input type="checkbox" id="selectAll" onchange="toggleSelectAll()">
                </th>
                <th>Product</th>
                <th>SKU</th>
                <th>Category</th>
                <th>Total Stock</th>
                <th>Stock Status</th>
                <th>Unit Price</th>
                <th>Cost Price</th>
                <th>Added</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% inventory.forEach(item => { %>
                <tr>
                  <td>
                    <input type="checkbox" class="inventory-checkbox" value="<%= item.id %>" data-product-id="<%= item.product_id %>" data-name="<%= item.product_name %>" data-sku="<%= item.sku %>" onchange="updateBulkActions()">
                  </td>
                  <td><strong><%= item.product_name %></strong></td>
                  <td><code style="background: #f5f5f5; padding: 4px 8px; border-radius: 4px; font-size: 12px;"><%= item.sku %></code></td>
                  <td><%= item.category_name || 'N/A' %></td>
                  <td>
                    <strong style="font-size: 16px; color: <%= item.total_stock < item.floor_level ? '#dc3545' : '#333' %>;">
                      <%= item.total_stock %>
                    </strong>
                    <div style="font-size: 11px; color: #999;">Floor: <%= item.floor_level %></div>
                  </td>
                  <td>
                    <span style="display: inline-block; padding: 6px 12px; border-radius: 20px; font-size: 12px; font-weight: 600; background: <%= item.stock_status_color %>; color: <%= item.stock_status_text_color %>; border: 1px solid <%= item.stock_status_color %>;">
                      <i class="fas fa-circle" style="font-size: 6px; margin-right: 4px;"></i>
                      <%= item.stock_status_label %>
                    </span>
                  </td>
                  <td><strong style="color: var(--accent-color);">$<%= parseFloat(item.unit_price).toFixed(2) %></strong></td>
                  <td>$<%= parseFloat(item.cost_price).toFixed(2) %></td>
                  <td><%= new Date(item.created_at).toLocaleDateString() %></td>
                  <td>
                    <div style="display: flex; gap: 8px;">
                      <a href="/admin/inventory/edit/<%= item.id %>" class="btn btn-sm btn-outline" title="View Details">
                        <i class="fas fa-eye"></i>
                      </a>
                      <form 
                        id="deleteForm-<%= item.id %>" 
                        action="/admin/inventory/delete/<%= item.id %>" 
                        method="POST" 
                        style="display: inline;"
                      >
                        <input type="hidden" name="branchId" value="<%= selectedBranch %>">
                        <button 
                          type="button" 
                          class="btn btn-sm btn-danger delete-item-btn" 
                          data-id="<%= item.id %>"
                          data-name="<%= item.product_name %>"
                          title="Remove from Branch"
                        >
                          <i class="fas fa-trash"></i>
                        </button>
                      </form>
                    </div>
                  </td>
                </tr>
              <% }) %>
            </tbody>
          </table>
          <% } %>
        </div>
        
        <!-- Card View -->
        <div class="inventory-grid">
          <% if (inventory.length === 0) { %>
            <div style="grid-column: 1 / -1; text-align: center; padding: 60px 20px; color: #999;">
              <i class="fas fa-search" style="font-size: 64px; margin-bottom: 20px; opacity: 0.3;"></i>
              <h3 style="font-size: 24px; font-weight: 600; color: #666; margin-bottom: 12px;">No Products Found</h3>
              <p style="font-size: 16px;">Try adjusting your search or filters, or add products to this branch.</p>
              <% if (search || categoryFilter) { %>
                <button onclick="clearFilters()" class="btn btn-primary" style="margin-top: 20px;">
                  <i class="fas fa-times"></i> Clear Filters
                </button>
              <% } else { %>
                <a href="/admin/inventory/add?branch=<%= selectedBranch %>" class="btn btn-primary" style="margin-top: 20px;">
                  <i class="fas fa-plus"></i> Add Products
                </a>
              <% } %>
            </div>
          <% } else { %>
          <% inventory.forEach(item => { %>
            <div class="inventory-card">
              <div class="inventory-card-image">
                <input type="checkbox" class="inventory-checkbox card-checkbox" value="<%= item.id %>" data-product-id="<%= item.product_id %>" data-name="<%= item.product_name %>" data-sku="<%= item.sku %>" onchange="updateBulkActions()">
                <% if (item.image_url) { %>
                  <img src="<%= item.image_url %>" alt="<%= item.product_name %>">
                <% } else { %>
                  <i class="fas fa-pills"></i>
                <% } %>
              </div>
              
              <div class="inventory-card-body">
                <h3 class="inventory-card-title"><%= item.product_name %></h3>
                <div class="inventory-card-sku"><%= item.sku %></div>
                
                <!-- Stock Status Badge -->
                <div style="margin-bottom: 12px;">
                  <span style="display: inline-block; padding: 6px 12px; border-radius: 20px; font-size: 12px; font-weight: 600; background: <%= item.stock_status_color %>; color: <%= item.stock_status_text_color %>; border: 1px solid <%= item.stock_status_color %>;">
                    <i class="fas fa-circle" style="font-size: 6px; margin-right: 4px;"></i>
                    <%= item.stock_status_label %>
                  </span>
                </div>
                
                <div class="inventory-card-info">
                  <div class="inventory-card-info-item">
                    <span><i class="fas fa-tag"></i> <%= item.category_name || 'Uncategorized' %></span>
                  </div>
                  <div class="inventory-card-info-item" style="padding: 8px 0; border-top: 2px solid #f0f0f0; border-bottom: 2px solid #f0f0f0; margin: 8px 0;">
                    <span><strong>Total Stock:</strong></span>
                    <div style="text-align: right;">
                      <strong style="font-size: 20px; color: <%= item.total_stock < item.floor_level ? '#dc3545' : '#28a745' %>;">
                        <%= item.total_stock %>
                      </strong>
                      <div style="font-size: 11px; color: #999;">Floor: <%= item.floor_level %></div>
                    </div>
                  </div>
                  <div class="inventory-card-info-item">
                    <span>Unit Price:</span>
                    <strong style="color: var(--accent-color);">$<%= parseFloat(item.unit_price).toFixed(2) %></strong>
                  </div>
                  <div class="inventory-card-info-item">
                    <span>Cost Price:</span>
                    <strong>$<%= parseFloat(item.cost_price).toFixed(2) %></strong>
                  </div>
                  <div class="inventory-card-info-item">
                    <span><i class="fas fa-clock"></i> Added:</span>
                    <span><%= new Date(item.created_at).toLocaleDateString() %></span>
                  </div>
                </div>
                
                <div class="inventory-card-actions">
                  <a href="/admin/inventory/edit/<%= item.id %>" class="btn btn-sm btn-outline" style="flex: 1;">
                    <i class="fas fa-eye"></i>
                    View
                  </a>
                  <form 
                    id="deleteForm-<%= item.id %>" 
                    action="/admin/inventory/delete/<%= item.id %>" 
                    method="POST" 
                    style="flex: 1;"
                  >
                    <input type="hidden" name="branchId" value="<%= selectedBranch %>">
                    <button 
                      type="button" 
                      class="btn btn-sm btn-danger delete-item-btn" 
                      style="width: 100%;" 
                      data-id="<%= item.id %>"
                      data-name="<%= item.product_name %>"
                    >
                      <i class="fas fa-trash"></i>
                    </button>
                  </form>
                </div>
              </div>
            </div>
          <% }) %>
          <% } %>
        </div>
        
        <!-- Pagination -->
        <% 
          const buildPaginationUrl = (page) => {
            const params = new URLSearchParams();
            params.set('page', page);
            params.set('branch', selectedBranch);
            if (search) params.set('search', search);
            if (categoryFilter) {
              if (Array.isArray(categoryFilter)) {
                categoryFilter.forEach(cat => params.append('category', cat));
              } else {
                params.set('category', categoryFilter);
              }
            }
            if (stockStatusFilter) params.set('stockStatus', stockStatusFilter);
            return '?' + params.toString();
          };
        %>
        <% if (totalPages > 1) { %>
          <div class="pagination">
            <% if (currentPage > 1) { %>
              <a href="<%= buildPaginationUrl(currentPage - 1) %>">
                <i class="fas fa-chevron-left"></i>
              </a>
            <% } else { %>
              <span class="disabled">
                <i class="fas fa-chevron-left"></i>
              </span>
            <% } %>
            
            <% for (let i = 1; i <= totalPages; i++) { %>
              <% if (i === currentPage) { %>
                <span class="current"><%= i %></span>
              <% } else if (i === 1 || i === totalPages || (i >= currentPage - 2 && i <= currentPage + 2)) { %>
                <a href="<%= buildPaginationUrl(i) %>"><%= i %></a>
              <% } else if (i === currentPage - 3 || i === currentPage + 3) { %>
                <span>...</span>
              <% } %>
            <% } %>
            
            <% if (currentPage < totalPages) { %>
              <a href="<%= buildPaginationUrl(currentPage + 1) %>">
                <i class="fas fa-chevron-right"></i>
              </a>
            <% } else { %>
              <span class="disabled">
                <i class="fas fa-chevron-right"></i>
              </span>
            <% } %>
            
            <span class="pagination-info">
              Showing <%= inventory.length %> of <%= totalInventory %> products
            </span>
          </div>
        <% } %>
      <% } else { %>
        <div class="card text-center" style="padding: 60px;">
          <i class="fas fa-building" style="font-size: 64px; color: var(--accent-color); margin-bottom: 24px;"></i>
          <h2 style="font-size: 24px; margin-bottom: 16px;">No Branch Selected</h2>
          <p style="color: #666;">Please select a branch to view inventory.</p>
        </div>
      <% } %>
    </div>
  </div>
  </div>

  <!-- Custom Alert Modal -->
  <div id="alertModal" class="modal-overlay" style="display: none;">
    <div class="modal-box">
      <div class="modal-header">
        <i id="alertIcon" class="fas fa-info-circle"></i>
        <h3 id="alertTitle">Notification</h3>
      </div>
      <p id="alertMessage"></p>
      <div class="modal-actions">
        <button id="alertCancelBtn" class="btn btn-outline" style="display: none;">Cancel</button>
        <button id="alertOkBtn" class="btn btn-primary">OK</button>
      </div>
    </div>
  </div>
  
  <script>

    document.addEventListener('DOMContentLoaded', () => {
      const alerts = document.querySelectorAll('.alert');
      if (alerts.length > 0) {
        setTimeout(() => {
          alerts.forEach(alert => {
            alert.style.transition = 'opacity 0.5s ease';
            alert.style.opacity = '0';
            setTimeout(() => alert.remove(), 500);
          });
        }, 3000);
      }
    });

    function showSkeleton(view = 'table') {
      const wrapper = document.getElementById('skeletonWrapper');
      const tableSkeleton = wrapper.querySelector('.skeleton-table');
      const cardSkeleton = wrapper.querySelector('.skeleton-card-grid');

      wrapper.classList.add('active');
      tableSkeleton.style.display = 'none';
      cardSkeleton.style.display = 'none';

      if (view === 'card') {
        cardSkeleton.style.display = 'grid';
      } else {
        tableSkeleton.style.display = 'table';
      }

      document.querySelector('.table-container').classList.remove('active');
      document.querySelector('.inventory-grid').classList.remove('active');
    }

    function hideSkeleton(view) {
      const wrapper = document.getElementById('skeletonWrapper');
      setTimeout(() => {
        wrapper.classList.remove('active');
        if (view === 'card') {
          document.querySelector('.inventory-grid').classList.add('active');
        } else {
          document.querySelector('.table-container').classList.add('active');
        }
      }, 150);
    }

    function switchView(view) {
      const tableBtn = document.getElementById('tableViewBtn');
      const cardBtn = document.getElementById('cardViewBtn');

      tableBtn.classList.remove('active');
      cardBtn.classList.remove('active');
      if (view === 'table') tableBtn.classList.add('active');
      else cardBtn.classList.add('active');

      localStorage.setItem('stockView', view);
      

      clearSelection();
      
      showSkeleton(view);
      setTimeout(() => hideSkeleton(view), 150);
    }

    document.addEventListener('DOMContentLoaded', () => {
      const savedView = localStorage.getItem('stockView') || 'table';
      const isMobile = window.innerWidth <= 768;
      const activeView = isMobile ? 'card' : savedView;
      switchView(activeView);
    });


    function debounce(func, wait) {
      let timeout;
      return function executedFunction(...args) {
        const later = () => {
          clearTimeout(timeout);
          func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    }
    
    async function applyFilters() {
      const currentView = localStorage.getItem('stockView') || 'table';
      showSkeleton(currentView);
      
      const searchValue = document.getElementById('searchInput').value;
      const stockStatusValue = document.getElementById('stockStatusFilter').value;
      
      const params = new URLSearchParams();
      params.set('page', '1');
      params.set('branch', '<%= selectedBranch %>');
      if (searchValue) params.set('search', searchValue);
      if (stockStatusValue) params.set('stockStatus', stockStatusValue);
      if (selectedCategories.length > 0) {
        selectedCategories.forEach(categoryId => {
          params.append('category', categoryId);
        });
      }

      window.location.href = '/admin/inventory/stock-management?' + params.toString();
    }
    

    function clearFilters() {
      window.location.href = '/admin/inventory/stock-management?branch=<%= selectedBranch %>';
    }
    

    document.addEventListener('DOMContentLoaded', function() {
      const searchInput = document.getElementById('searchInput');
      const stockStatusFilter = document.getElementById('stockStatusFilter');
      

      const debouncedSearch = debounce(() => {
        applyFilters();
      }, 300);
      
      searchInput.addEventListener('input', debouncedSearch);
      

      const debouncedFilter = debounce(() => {
        applyFilters();
      }, 300);
      
      stockStatusFilter.addEventListener('change', debouncedFilter);
    });


    function toggleSelectAll() {
      const selectAll = document.getElementById('selectAll');
      const visibleCheckboxes = getVisibleCheckboxes();
      
      visibleCheckboxes.forEach(checkbox => {
        checkbox.checked = selectAll.checked;
      });
      
      updateBulkActions();
    }


    function updateBulkActions() {
      const visibleCheckboxes = getVisibleCheckboxes();
      const checkedBoxes = Array.from(visibleCheckboxes).filter(cb => cb.checked);
      const bulkActions = document.getElementById('bulkActions');
      const selectedCount = document.getElementById('selectedCount');
      
      if (checkedBoxes.length > 0) {
        bulkActions.classList.add('active');
        selectedCount.textContent = `${checkedBoxes.length} item(s) selected`;
      } else {
        bulkActions.classList.remove('active');
      }
    }

    function getVisibleCheckboxes() {
      const currentView = localStorage.getItem('stockView') || 'table';
      
      if (currentView === 'card') {

        return document.querySelectorAll('.card-checkbox');
      } else {

        return document.querySelectorAll('.table-container .inventory-checkbox');
      }
    }


    function clearSelection() {
      const visibleCheckboxes = getVisibleCheckboxes();
      const selectAll = document.getElementById('selectAll');
      
      visibleCheckboxes.forEach(checkbox => {
        checkbox.checked = false;
      });
      if (selectAll) {
        selectAll.checked = false;
      }
      
      updateBulkActions();
    }

    function bulkDelete() {
      const visibleCheckboxes = getVisibleCheckboxes();
      const checkedBoxes = Array.from(visibleCheckboxes).filter(cb => cb.checked);
      const ids = Array.from(checkedBoxes).map(cb => cb.value);
      const names = Array.from(checkedBoxes).map(cb => cb.dataset.name);
      
      if (ids.length === 0) {
        showAlert('Please select at least one product to delete', 'warning', 'No Selection');
        return;
      }
      
      const confirmMessage = ids.length === 1 
        ? `Are you sure you want to remove "${names[0]}" from this branch?`
        : `Are you sure you want to remove ${ids.length} products from this branch?\n\nThis will remove:\n${names.slice(0, 5).join('\n')}${names.length > 5 ? '\n... and ' + (names.length - 5) + ' more' : ''}`;
      
      showAlert(
        confirmMessage,
        "warning",
        "Confirm Bulk Delete",
        true, 
        function(confirmed) {
          if (confirmed) {

            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '/admin/inventory/bulk-delete';
            
            const idsInput = document.createElement('input');
            idsInput.type = 'hidden';
            idsInput.name = 'inventoryIds';
            idsInput.value = JSON.stringify(ids);
            form.appendChild(idsInput);
            
            const branchInput = document.createElement('input');
            branchInput.type = 'hidden';
            branchInput.name = 'branchId';
            branchInput.value = '<%= selectedBranch %>';
            form.appendChild(branchInput);
            
            document.body.appendChild(form);
            form.submit();
          }
        }
      );
    }


    function goToBulkRestock() {
      const visibleCheckboxes = getVisibleCheckboxes();
      const checkedBoxes = Array.from(visibleCheckboxes).filter(cb => cb.checked);
      
      if (checkedBoxes.length === 0) {
        alert('Please select at least one product to restock');
        return;
      }


      const selectedProducts = Array.from(checkedBoxes).map(cb => ({
        id: cb.value,
        productId: cb.dataset.productId,
        name: cb.dataset.name,
        sku: cb.dataset.sku
      }));


      const form = document.createElement('form');
      form.method = 'POST';
      form.action = '/admin/inventory/bulk-restock';

      const createInput = (name, value) => {
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = name;
        input.value = value;
        return input;
      };

      form.appendChild(createInput('productIds', JSON.stringify(selectedProducts.map(p => p.productId))));
      form.appendChild(createInput('branchId', '<%= selectedBranch %>'));
      form.appendChild(createInput('selectedProducts', JSON.stringify(selectedProducts)));

      document.body.appendChild(form);
      form.submit();
    }


    let selectedCategories = [];
    

    document.addEventListener('DOMContentLoaded', function() {
      const existingChips = document.querySelectorAll('.chip');
      if (existingChips.length > 0) {
        selectedCategories = Array.from(existingChips).map(chip => chip.getAttribute('data-value'));
      }
      updatePlaceholder();
      

      const multiselectInput = document.querySelector('.multiselect-input');
      if (multiselectInput) {


      }
    });

    function toggleDropdown() {
      const dropdown = document.getElementById('categoryDropdown');
      const input = document.querySelector('.multiselect-input');
      
      if (dropdown && input) {
        if (dropdown.classList.contains('show')) {
          dropdown.classList.remove('show');
          input.classList.remove('open');
        } else {
          dropdown.classList.add('show');
          input.classList.add('open');
        }
      }
    }

    function toggleOption(option) {
      const value = option.getAttribute('data-value');
      const name = option.getAttribute('data-name');
      
      if (option.classList.contains('selected')) {

        option.classList.remove('selected');
        removeCategory(value);
      } else {

        option.classList.add('selected');
        addCategory(value, name);
      }
      

      const debouncedFilter = debounce(() => {
        applyFilters();
      }, 300);
      debouncedFilter();
    }

    function addCategory(value, name) {
      if (!selectedCategories.includes(value)) {
        selectedCategories.push(value);
        createChip(value, name);
        updatePlaceholder();
      }
    }

    function removeCategory(value) {
      selectedCategories = selectedCategories.filter(cat => cat !== value);
      const chip = document.querySelector(`.chip[data-value="${value}"]`);
      if (chip) {
        chip.remove();
      }
      updatePlaceholder();
    }

    function removeChip(event, value) {
      event.stopPropagation();
      removeCategory(value);
      

      const option = document.querySelector(`.dropdown-option[data-value="${value}"]`);
      if (option) {
        option.classList.remove('selected');
      }
      

      const debouncedFilter = debounce(() => {
        applyFilters();
      }, 300);
      debouncedFilter();
    }

    function createChip(value, name) {
      const chipsContainer = document.getElementById('selectedChips');
      if (chipsContainer) {
        const chip = document.createElement('span');
        chip.className = 'chip';
        chip.setAttribute('data-value', value);
        chip.innerHTML = `${name} <span class="chip-remove" onclick="removeChip(event, '${value}')"><i class="fas fa-times"></i></span>`;
        chipsContainer.appendChild(chip);
      }
    }

    function updatePlaceholder() {
      const placeholder = document.getElementById('placeholder');
      if (placeholder) {
        if (selectedCategories.length > 0) {
          placeholder.classList.add('hidden');
        } else {
          placeholder.classList.remove('hidden');
        }
      }
    }

    function clearAllCategories() {

      selectedCategories = [];
      

      const chips = document.querySelectorAll('.chip');
      chips.forEach(chip => chip.remove());
      

      const options = document.querySelectorAll('.dropdown-option.selected');
      options.forEach(option => option.classList.remove('selected'));
      

      updatePlaceholder();
      

      const debouncedFilter = debounce(() => {
        applyFilters();
      }, 300);
      debouncedFilter();
    }


    document.addEventListener('click', function(event) {
      const multiselect = document.getElementById('categoryMultiselect');
      if (multiselect && !multiselect.contains(event.target)) {
        const dropdown = document.getElementById('categoryDropdown');
        const input = document.querySelector('.multiselect-input');
        if (dropdown) dropdown.classList.remove('show');
        if (input) input.classList.remove('open');
      }
    });


    document.addEventListener('click', function(e) {
      if (e.target.closest('.delete-item-btn')) {
        const btn = e.target.closest('.delete-item-btn');
        const id = btn.getAttribute('data-id');
        const name = btn.getAttribute('data-name');
        confirmDelete(id, name);
      }
    });

    function confirmDelete(itemId, itemName) {
      showAlert(
        `Are you sure you want to remove "${itemName}" from this branch?`,
        "warning",
        "Confirm Delete",
        true, 
        function(confirmed) {
          if (confirmed) {
            document.getElementById(`deleteForm-${itemId}`).submit();
          }
        }
      );
    }

    function showAlert(message, type = "info", title = "Notification", isConfirm = false, callback = null) {
      const modal = document.getElementById("alertModal");
      const icon = document.getElementById("alertIcon");
      const titleElem = document.getElementById("alertTitle");
      const msgElem = document.getElementById("alertMessage");
      const okBtn = document.getElementById("alertOkBtn");
      const cancelBtn = document.getElementById("alertCancelBtn");

      const iconMap = {
        success: "fa-check-circle",
        error: "fa-exclamation-circle",
        warning: "fa-exclamation-triangle",
        info: "fa-info-circle"
      };
      const colorMap = {
        success: "#4CAF50",
        error: "#e53935",
        warning: "#fbc02d",
        info: "#2196f3"
      };

      icon.className = `fas ${iconMap[type] || iconMap.info}`;
      icon.style.color = colorMap[type] || colorMap.info;
      titleElem.textContent = title;
      msgElem.textContent = message;

      modal.style.display = "flex";
      document.body.style.overflow = "hidden";


      if (isConfirm) {
        cancelBtn.style.display = "inline-block";
        okBtn.textContent = "Yes";
        cancelBtn.onclick = () => {
          modal.style.display = "none";
          document.body.style.overflow = "auto";
          if (callback) callback(false);
        };
        okBtn.onclick = () => {
          modal.style.display = "none";
          document.body.style.overflow = "auto";
          if (callback) callback(true);
        };
      } else {
        cancelBtn.style.display = "none";
        okBtn.textContent = "OK";
        okBtn.onclick = () => {
          modal.style.display = "none";
          document.body.style.overflow = "auto";
          if (callback) callback(true);
        };
      }
    }


    document.getElementById("alertModal").addEventListener("click", (e) => {
      if (e.target.id === "alertModal") {
        e.target.style.display = "none";
        document.body.style.overflow = "auto";
      }
    });
  </script>
</body>
</html>
