<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/fontawesome/css/all.min.css">
  <style>
    .view-toggle {
      display: flex;
      gap: 8px;
      background: white;
      padding: 4px;
      border-radius: 8px;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }
    
    .view-toggle button {
      padding: 8px 16px;
      border: none;
      background: transparent;
      cursor: pointer;
      border-radius: 6px;
      color: #666;
      transition: all 0.2s;
      display: flex;
      align-items: center;
      gap: 6px;
    }
    
    .view-toggle button.active {
      background: var(--accent-color);
      color: white;
    }
    
    .view-toggle button:hover:not(.active) {
      background: #f5f5f5;
    }
    
    .orders-grid {
      display: none;
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 20px;
      margin-top: 24px;
    }
    
    .orders-grid.active {
      display: grid;
    }
    
    .order-card {
      background: white;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      transition: all 0.3s;
      position: relative;
    }
    
    .order-card:hover {
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
      transform: translateY(-2px);
    }
    
    .order-card-header {
      padding: 20px;
      background: linear-gradient(135deg, var(--accent-color), #45a049);
      color: white;
    }
    
    .order-card-title {
      font-size: 18px;
      font-weight: 700;
      margin: 0 0 8px 0;
    }
    
    .order-card-meta {
      display: flex;
      gap: 12px;
      align-items: center;
      flex-wrap: wrap;
    }
    
    .order-card-badge {
      padding: 4px 8px;
      border-radius: 4px;
      font-size: 12px;
      font-weight: 600;
    }
    
    .order-card-body {
      padding: 20px;
    }
    
    .order-card-info {
      display: flex;
      flex-direction: column;
      gap: 8px;
      margin-bottom: 16px;
    }
    
    .order-card-info-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-size: 14px;
    }
    
    .order-card-info-label {
      color: #666;
      font-weight: 500;
    }
    
    .order-card-info-value {
      font-weight: 600;
    }
    
    .order-card-actions {
      display: flex;
      gap: 8px;
      padding-top: 16px;
      border-top: 1px solid #eee;
    }

    .order-card-actions form {
      margin: 0;
    }

    .order-card-actions form button {
      height: 100%;
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .table-container {
      display: none;
    }
    
    .table-container.active {
      display: block;
    }
    
    .bulk-actions {
      background: #f8f9fa;
      padding: 16px;
      border-radius: 8px;
      margin-bottom: 20px;
      display: none;
    }
    
    .bulk-actions.active {
      display: block;
    }
    
    .bulk-actions-content {
      display: flex;
      gap: 12px;
      align-items: center;
      flex-wrap: wrap;
    }
    
    .search-filter-bar {
      display: flex;
      gap: 12px;
      margin-bottom: 24px;
      flex-wrap: wrap;
    }
    
    .search-box {
      flex: 1;
      min-width: 250px;
      position: relative;
    }
    
    .search-box input {
      width: 100%;
      padding: 12px 16px 12px 44px;
      border: 1px solid #ddd;
      border-radius: 8px;
      font-size: 14px;
      transition: all 0.2s;
    }
    
    .search-box input:focus {
      outline: none;
      border-color: var(--accent-color);
      box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
    }
    
    .search-box i {
      position: absolute;
      left: 16px;
      top: 50%;
      transform: translateY(-50%);
      color: #999;
    }
    
    .filter-box {
      position: relative;
    }
    
    .filter-box select {
      padding: 12px 40px 12px 16px;
      border: 1px solid #ddd;
      border-radius: 8px;
      font-size: 14px;
      background: white;
      cursor: pointer;
      appearance: none;
      transition: all 0.2s;
      min-width: 160px;
    }
    
    .filter-box select:focus {
      outline: none;
      border-color: var(--accent-color);
      box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
    }
    
    .filter-box i {
      position: absolute;
      right: 16px;
      top: 50%;
      transform: translateY(-50%);
      color: #999;
      pointer-events: none;
    }
    
    .clear-filters {
      padding: 12px 20px;
      background: #f5f5f5;
      border: 1px solid #ddd;
      border-radius: 8px;
      color: #666;
      cursor: pointer;
      transition: all 0.2s;
      font-size: 14px;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    
    .clear-filters:hover {
      background: #e0e0e0;
    }

    .pagination {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 8px;
      margin-top: 32px;
      padding-top: 24px;
      border-top: 1px solid #eee;
    }
    
    .pagination a,
    .pagination span {
      padding: 8px 12px;
      border-radius: 6px;
      text-decoration: none;
      color: #666;
      transition: all 0.2s;
    }
    
    .pagination a {
      background: white;
      border: 1px solid #ddd;
    }
    
    .pagination a:hover {
      background: var(--accent-color);
      color: white;
      border-color: var(--accent-color);
    }
    
    .pagination .current {
      background: var(--accent-color);
      color: white;
      font-weight: 600;
      border: 1px solid var(--accent-color);
    }
    
    .pagination .disabled {
      opacity: 0.4;
      cursor: not-allowed;
      pointer-events: none;
    }
    
    .pagination-info {
      color: #666;
      font-size: 14px;
      margin-left: 16px;
    }

    .skeleton-wrapper {
      margin-top: 24px;
      display: none;
      opacity: 0;
      transition: opacity 0.3s ease;
      pointer-events: none;
    }

    .skeleton-wrapper.active {
      display: block;
      opacity: 1;
    }

    .skeleton-table {
      width: 100%;
      border-collapse: collapse;
    }

    .skeleton-row {
      height: 44px;
      border-bottom: 1px solid #ddd;
    }

    .skeleton-cell {
      height: 16px;
      border-radius: 6px;
      background: #e2e2e2;
      position: relative;
      overflow: hidden;
    }

    .skeleton-cell::after {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.6), transparent);
      animation: shimmer 1.2s infinite;
    }

    .skeleton-table td {
      padding: 12px;
    }

    .skeleton-card-grid {
      display: none;
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 20px;
    }

    .skeleton-card-grid.active {
      display: grid;
    }

    .skeleton-card {
      background: #e2e2e2;
      border-radius: 12px;
      height: 300px;
      position: relative;
      overflow: hidden;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }

    .skeleton-card::after {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.6), transparent);
      animation: shimmer 1.2s infinite;
    }

    @keyframes shimmer {
      100% {
        left: 100%;
      }
    }

    .modal-overlay {
      position: fixed;
      inset: 0;
      background: rgba(0,0,0,0.4);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 10000;
      animation: fadeIn 0.2s ease;
    }

    .modal-box {
      background: #fff;
      border-radius: 12px;
      padding: 24px 28px;
      max-width: 420px;
      width: 90%;
      box-shadow: 0 4px 20px rgba(0,0,0,0.15);
      animation: slideIn 0.25s ease;
      text-align: center;
    }

    .modal-header {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;
      margin-bottom: 12px;
    }

    .modal-header i {
      font-size: 24px;
      color: var(--accent-color, #4CAF50);
    }

    .modal-actions {
      margin-top: 20px;
      display: flex;
      gap: 8px;
      justify-content: center;
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    @keyframes slideIn {
      from { transform: translateY(-15px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }

    @media (max-width: 768px) {
      .view-toggle {
        display: none;
      }
      
      .orders-grid {
        display: grid !important;
        grid-template-columns: 1fr;
      }
      
      .table-container {
        display: none !important;
      }
      
      .flex-between {
        flex-direction: column;
        align-items: stretch !important;
        gap: 16px;
      }
      
      .flex-between > div:last-child {
        display: flex;
        flex-direction: column;
        gap: 12px;
      }
      
      .search-filter-bar {
        flex-direction: column;
      }
      
      .search-box,
      .filter-box select {
        width: 100%;
        min-width: 100%;
      }
      
      .pagination {
        flex-wrap: wrap;
        gap: 6px;
      }
      
      .pagination-info {
        width: 100%;
        text-align: center;
        margin-left: 0;
        margin-top: 8px;
      }

      .skeleton-table {
        display: none !important;
      }
      .skeleton-card-grid {
        display: grid !important;
        grid-template-columns: 1fr;
      }

      .order-card-actions {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 10px;
      }

      .order-card-actions a,
      .order-card-actions form button {
        width: 100%;
      }
    }

    .order-card-actions form,
    .table-container td form {
      flex: 1;
      display: flex;
      margin: 0;
    }

    .order-card-actions .btn,
    .table-container td .btn {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 6px;
    }

    .table-container td > div {
      display: flex;
      gap: 8px;
      align-items: center;
    }

    .table-container td .btn {
      min-width: 40px;
      height: 32px;
    }

  </style>
</head>
<body>
  <%- include('../components/sidebar', { currentPath: '/admin/inventory/orders' }) %>
  
  <div class="main-content">
    <div style="min-height: 100vh; background-color: var(--bg-color); padding: 32px 20px;">
    <div class="container">
      <div class="flex-between mb-3">
        <div>
          <h1 style="font-size: 32px; font-weight: 700; margin-bottom: 8px;">
            <i class="fas fa-clipboard-list"></i> Order Management
          </h1>
          <p style="color: #666;">Manage customer orders across all branches</p>
        </div>
        
        <div style="display: flex; gap: 12px; align-items: center;">
          <% if (selectedBranch) { %>
            <div class="view-toggle">
              <button id="tableViewBtn" class="active" onclick="switchView('table')">
                <i class="fas fa-table"></i>
                Table
              </button>
              <button id="cardViewBtn" onclick="switchView('card')">
                <i class="fas fa-th"></i>
                Cards
              </button>
            </div>
            <select class="form-control" style="width: 250px;" onchange="window.location.href='/admin/inventory/orders?branch=' + this.value">
              <% branches.forEach(branch => { %>
                <option value="<%= branch.id %>" <%= selectedBranch === branch.id ? 'selected' : '' %>>
                  <%= branch.name %>
                </option>
              <% }) %>
            </select>
            <a href="/admin/inventory/orders/add?branch=<%= selectedBranch %>" class="btn btn-primary">
              <i class="fas fa-plus"></i>
              Create Order
            </a>
          <% } %>
        </div>
      </div>
      
      <% if (typeof success !== 'undefined' && success) { %>
        <div class="alert alert-success">
          <i class="fas fa-check-circle"></i>
          <%= success %>
        </div>
      <% } %>
      
      <% if (typeof error !== 'undefined' && error) { %>
        <div class="alert alert-error">
          <i class="fas fa-exclamation-circle"></i>
          <%= error %>
        </div>
      <% } %>
      
      <% if (selectedBranch) { %>
        <!-- Bulk Actions -->
        <div id="bulkActions" class="bulk-actions">
          <div class="bulk-actions-content">
            <span id="selectedCount">0 orders selected</span>
            <select id="bulkStatus" class="form-control" style="width: 200px;">
              <option value="">Select Status</option>
              <option value="pending">Pending</option>
              <option value="processing">Processing</option>
              <option value="ready">Ready</option>
              <option value="completed">Completed</option>
              <option value="cancelled">Cancelled</option>
            </select>
            <button id="bulkUpdateBtn" class="btn btn-primary" onclick="bulkUpdateStatus()">
              <i class="fas fa-check"></i> Update Status
            </button>
            <button id="bulkPrintBtn" class="btn btn-outline" onclick="bulkPrintReceipts()">
              <i class="fas fa-print"></i> Print Receipts
            </button>
            <button class="btn btn-outline" onclick="clearSelection()">
              <i class="fas fa-times"></i> Clear Selection
            </button>
          </div>
        </div>

        <!-- Search and Filter Bar -->
        <div class="search-filter-bar">
          <div class="search-box">
            <i class="fas fa-search"></i>
            <input 
              type="text" 
              id="searchInput" 
              placeholder="Search by customer name or order ID..." 
              value="<%= search %>"
            >
          </div>
          
          <div class="filter-box">
            <select id="orderTypeFilter">
              <option value="">All Order Types</option>
              <option value="pickup" <%= orderType === 'pickup' ? 'selected' : '' %>>Pick Up</option>
              <option value="delivery" <%= orderType === 'delivery' ? 'selected' : '' %>>Delivery</option>
            </select>
            <i class="fas fa-chevron-down"></i>
          </div>
          
          <div class="filter-box">
            <select id="statusFilter">
              <option value="">All Status</option>
              <option value="pending" <%= statusFilter === 'pending' ? 'selected' : '' %>>Pending</option>
              <option value="processing" <%= statusFilter === 'processing' ? 'selected' : '' %>>Processing</option>
              <option value="ready" <%= statusFilter === 'ready' ? 'selected' : '' %>>Ready</option>
              <option value="completed" <%= statusFilter === 'completed' ? 'selected' : '' %>>Completed</option>
              <option value="cancelled" <%= statusFilter === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
            </select>
            <i class="fas fa-chevron-down"></i>
          </div>
          
          <% if (search || orderType || statusFilter) { %>
            <button class="clear-filters" onclick="clearFilters()">
              <i class="fas fa-times"></i>
              Clear Filters
            </button>
          <% } %>
        </div>

        <!-- Skeleton Loading -->
        <div id="skeletonWrapper" class="skeleton-wrapper active">
          <table class="skeleton-table">
            <tbody>
              <% for (let i = 0; i < 5; i++) { %>
                <tr class="skeleton-row">
                  <td><div class="skeleton-cell" style="width: 50px;"></div></td>
                  <td><div class="skeleton-cell" style="width: 25%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 15%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 10%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 12%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 12%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 10%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 12%;"></div></td>
                  <td><div class="skeleton-cell" style="width: 10%;"></div></td>
                </tr>
              <% } %>
            </tbody>
          </table>
        
          <div class="skeleton-card-grid">
            <div class="skeleton-card"></div>
            <div class="skeleton-card"></div>
            <div class="skeleton-card"></div>
          </div>
        </div>

        <!-- Table View -->
        <div class="table-container active fade-in">
          <% if (orders.length === 0) { %>
            <div style="text-align: center; padding: 60px 20px; color: #999;">
              <i class="fas fa-search" style="font-size: 64px; margin-bottom: 20px; opacity: 0.3;"></i>
              <h3 style="font-size: 24px; font-weight: 600; color: #666; margin-bottom: 12px;">No Orders Found</h3>
              <p style="font-size: 16px;">Try adjusting your search or filters, or create a new order.</p>
              <% if (search || orderType || statusFilter) { %>
                <button onclick="clearFilters()" class="btn btn-primary" style="margin-top: 20px;">
                  <i class="fas fa-times"></i> Clear Filters
                </button>
              <% } %>
            </div>
          <% } else { %>
          <table>
            <thead>
              <tr>
                <th>
                  <input type="checkbox" id="selectAll" onchange="toggleSelectAll()">
                </th>
                <th>Order ID</th>
                <th>Customer</th>
                <th>Type</th>
                <th>Items</th>
                <th>Subtotal</th>
                <th>Discount</th>
                <th>Total</th>
                <th>Status</th>
                <th>Created By</th>
                <th>Last Updated By</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% orders.forEach(order => { %>
                <tr>
                  <td>
                    <input type="checkbox" class="order-checkbox" value="<%= order.id %>" onchange="updateBulkActions()">
                  </td>
                  <td><strong>#<%= order.id %></strong></td>
                  <td>
                    <strong><%= order.customer_name %></strong><br>
                    <small style="color: #666;"><%= order.customer_email %></small>
                  </td>
                  <td>
                    <% if (order.order_type === 'pickup') { %>
                      <span class="badge badge-info">
                        <i class="fas fa-shopping-bag"></i> Pick Up
                      </span>
                    <% } else { %>
                      <span class="badge badge-primary">
                        <i class="fas fa-truck"></i> Delivery
                      </span>
                    <% } %>
                  </td>
                  <td><%= order.total_items || 0 %> items</td>
                  <td>$<%= parseFloat(order.subtotal).toFixed(2) %></td>
                  <td>
                    <% if (order.discount > 0) { %>
                      <span style="color: #ff9800;">
                        <% if (order.discount_type === 'percentage') { %>
                          <%= order.discount %>%
                        <% } else { %>
                          $<%= parseFloat(order.discount).toFixed(2) %>
                        <% } %>
                      </span>
                    <% } else { %>
                      -
                    <% } %>
                  </td>
                  <td><strong style="color: var(--accent-color);">$<%= parseFloat(order.total).toFixed(2) %></strong></td>
                  <td>
                    <span class="badge badge-<%= order.status === 'completed' ? 'success' : order.status === 'pending' ? 'warning' : order.status === 'cancelled' ? 'danger' : 'info' %>">
                      <%= order.status.toUpperCase() %>
                    </span>
                  </td>
                  <td>
                    <%= order.created_by_name || 'N/A' %><br>
                    <small style="color: #666;"><%= new Date(order.created_at).toLocaleString() %></small>
                  </td>
                  <td>
                    <%= order.updated_by_name || 'N/A' %><br>
                    <small style="color: #666;"><%= new Date(order.updated_at).toLocaleString() %></small>
                  </td>
                  <td>
                    <div style="display: flex; gap: 8px;">
                      <a href="/admin/inventory/orders/view/<%= order.id %>" class="btn btn-sm btn-outline" title="View">
                        <i class="fas fa-eye"></i>
                      </a>
                      <a href="/admin/inventory/orders/print/<%= order.id %>" class="btn btn-sm btn-outline" title="Print" target="_top">
                        <i class="fas fa-print"></i>
                      </a>
                      <a href="/admin/inventory/orders/edit/<%= order.id %>" class="btn btn-sm btn-outline" title="Edit">
                        <i class="fas fa-edit"></i>
                      </a>
                      <form id="deleteForm-<%= order.id %>" action="/admin/inventory/orders/delete/<%= order.id %>" method="POST" style="display: inline;">
                        <input type="hidden" name="branchId" value="<%= selectedBranch %>">
                        <button type="button" class="btn btn-sm btn-danger delete-order-btn" data-id="<%= order.id %>" data-customer="<%= order.customer_name %>" title="Delete">
                          <i class="fas fa-trash"></i>
                        </button>
                      </form>
                    </div>
                  </td>
                </tr>
              <% }) %>
            </tbody>
          </table>
          <% } %>
        </div>
        
        <!-- Card View -->
        <div class="orders-grid">
          <% if (orders.length === 0) { %>
            <div style="grid-column: 1 / -1; text-align: center; padding: 60px 20px; color: #999;">
              <i class="fas fa-search" style="font-size: 64px; margin-bottom: 20px; opacity: 0.3;"></i>
              <h3 style="font-size: 24px; font-weight: 600; color: #666; margin-bottom: 12px;">No Orders Found</h3>
              <p style="font-size: 16px;">Try adjusting your search or filters, or create a new order.</p>
              <% if (search || orderType || statusFilter) { %>
                <button onclick="clearFilters()" class="btn btn-primary" style="margin-top: 20px;">
                  <i class="fas fa-times"></i> Clear Filters
                </button>
              <% } %>
            </div>
          <% } else { %>
          <% orders.forEach(order => { %>
            <div class="order-card">
              <div style="position: absolute; top: 20px; left: 20px; z-index: 10;">
                <input type="checkbox" class="order-checkbox-card" value="<%= order.id %>" onchange="updateBulkActions()" style="width: 20px; height: 20px; cursor: pointer;">
              </div>
              <div class="order-card-header" style="padding-left: 50px;">
                <h3 class="order-card-title">Order #<%= order.id %></h3>
                <div class="order-card-meta">
                  <span class="order-card-badge" style="background: rgba(255,255,255,0.2);">
                    <% if (order.order_type === 'pickup') { %>
                      <i class="fas fa-shopping-bag"></i> Pick Up
                    <% } else { %>
                      <i class="fas fa-truck"></i> Delivery
                    <% } %>
                  </span>
                  <span class="order-card-badge" style="background: rgba(255,255,255,0.2);">
                    <%= order.status.toUpperCase() %>
                  </span>
                </div>
              </div>
              
              <div class="order-card-body">
                <div class="order-card-info">
                  <div class="order-card-info-item">
                    <span class="order-card-info-label">Customer:</span>
                    <span class="order-card-info-value"><%= order.customer_name %></span>
                  </div>
                  <div class="order-card-info-item">
                    <span class="order-card-info-label">Items:</span>
                    <span class="order-card-info-value"><%= order.total_items || 0 %> items</span>
                  </div>
                  <div class="order-card-info-item">
                    <span class="order-card-info-label">Subtotal:</span>
                    <span class="order-card-info-value">$<%= parseFloat(order.subtotal).toFixed(2) %></span>
                  </div>
                  <% if (order.discount > 0) { %>
                    <div class="order-card-info-item">
                      <span class="order-card-info-label">Discount:</span>
                      <span class="order-card-info-value" style="color: #ff9800;">
                        <% if (order.discount_type === 'percentage') { %>
                          <%= order.discount %>%
                        <% } else { %>
                          $<%= parseFloat(order.discount).toFixed(2) %>
                        <% } %>
                      </span>
                    </div>
                  <% } %>
                  <div class="order-card-info-item">
                    <span class="order-card-info-label">Total:</span>
                    <span class="order-card-info-value" style="color: var(--accent-color); font-weight: 700;">$<%= parseFloat(order.total).toFixed(2) %></span>
                  </div>
                  <div class="order-card-info-item">
                    <span class="order-card-info-label">Created:</span>
                    <span class="order-card-info-value"><%= new Date(order.created_at).toLocaleDateString() %></span>
                  </div>
                  <div class="order-card-info-item">
                    <span class="order-card-info-label">Last Updated By:</span>
                    <span class="order-card-info-value"><%= order.updated_by_name || 'N/A' %></span>
                  </div>
                </div>
                
                <div class="order-card-actions">
                  <a href="/admin/inventory/orders/view/<%= order.id %>" class="btn btn-sm btn-outline" style="flex: 1;">
                    <i class="fas fa-eye"></i> View
                  </a>
                  <a href="/admin/inventory/orders/print/<%= order.id %>" class="btn btn-sm btn-outline" style="flex: 1;" target="_blank">
                    <i class="fas fa-print"></i> Print
                  </a>
                  <a href="/admin/inventory/orders/edit/<%= order.id %>" class="btn btn-sm btn-outline" style="flex: 1;">
                    <i class="fas fa-edit"></i> Edit
                  </a>
                  <form id="deleteFormCard-<%= order.id %>" action="/admin/inventory/orders/delete/<%= order.id %>" method="POST" style="flex: 1;">
                    <input type="hidden" name="branchId" value="<%= selectedBranch %>">
                    <button type="button" class="btn btn-sm btn-danger delete-order-btn" style="width: 100%;" data-id="<%= order.id %>" data-customer="<%= order.customer_name %>">
                      <i class="fas fa-trash"></i>
                    </button>
                  </form>
                </div>
              </div>
            </div>
          <% }) %>
          <% } %>
        </div>
        
        <!-- Pagination -->
        <% 
          const buildPaginationUrl = (page) => {
            const params = new URLSearchParams();
            params.set('page', page);
            params.set('branch', selectedBranch);
            if (search) params.set('search', search);
            if (orderType) params.set('type', orderType);
            if (statusFilter) params.set('status', statusFilter);
            return '?' + params.toString();
          };
        %>
        <% if (totalPages > 1) { %>
          <div class="pagination">
            <% if (currentPage > 1) { %>
              <a href="<%= buildPaginationUrl(currentPage - 1) %>">
                <i class="fas fa-chevron-left"></i>
              </a>
            <% } else { %>
              <span class="disabled">
                <i class="fas fa-chevron-left"></i>
              </span>
            <% } %>
            
            <% for (let i = 1; i <= totalPages; i++) { %>
              <% if (i === currentPage) { %>
                <span class="current"><%= i %></span>
              <% } else if (i === 1 || i === totalPages || (i >= currentPage - 2 && i <= currentPage + 2)) { %>
                <a href="<%= buildPaginationUrl(i) %>"><%= i %></a>
              <% } else if (i === currentPage - 3 || i === currentPage + 3) { %>
                <span>...</span>
              <% } %>
            <% } %>
            
            <% if (currentPage < totalPages) { %>
              <a href="<%= buildPaginationUrl(currentPage + 1) %>">
                <i class="fas fa-chevron-right"></i>
              </a>
            <% } else { %>
              <span class="disabled">
                <i class="fas fa-chevron-right"></i>
              </span>
            <% } %>
            
            <span class="pagination-info">
              Showing <%= orders.length %> of <%= totalOrders %> orders
            </span>
          </div>
        <% } %>
      <% } else { %>
        <div class="card text-center" style="padding: 60px;">
          <i class="fas fa-building" style="font-size: 64px; color: var(--accent-color); margin-bottom: 24px;"></i>
          <h2 style="font-size: 24px; margin-bottom: 16px;">No Branch Selected</h2>
          <p style="color: #666;">Please select a branch to view orders.</p>
        </div>
      <% } %>
    </div>
  </div>
  </div>
  
  <script>

    document.addEventListener('DOMContentLoaded', () => {
      const alerts = document.querySelectorAll('.alert');
      if (alerts.length > 0) {
        setTimeout(() => {
          alerts.forEach(alert => {
            alert.style.transition = 'opacity 0.5s ease';
            alert.style.opacity = '0';
            setTimeout(() => alert.remove(), 500);
          });
        }, 3000);
      }


      setTimeout(() => {
        document.getElementById('skeletonWrapper').classList.remove('active');
      }, 300);
    });

    function showSkeleton(view = 'table') {
      const wrapper = document.getElementById('skeletonWrapper');
      const tableSkeleton = wrapper.querySelector('.skeleton-table');
      const cardSkeleton = wrapper.querySelector('.skeleton-card-grid');

      wrapper.classList.add('active');
      tableSkeleton.style.display = 'none';
      cardSkeleton.style.display = 'none';

      if (view === 'card') {
        cardSkeleton.style.display = 'grid';
      } else {
        tableSkeleton.style.display = 'table';
      }

      document.querySelector('.table-container').classList.remove('active');
      document.querySelector('.orders-grid').classList.remove('active');
    }

    function hideSkeleton(view) {
      const wrapper = document.getElementById('skeletonWrapper');
      setTimeout(() => {
        wrapper.classList.remove('active');
        if (view === 'card') {
          document.querySelector('.orders-grid').classList.add('active');
        } else {
          document.querySelector('.table-container').classList.add('active');
        }
      }, 150);
    }

    function switchView(view) {
      const tableBtn = document.getElementById('tableViewBtn');
      const cardBtn = document.getElementById('cardViewBtn');

      tableBtn.classList.remove('active');
      cardBtn.classList.remove('active');
      if (view === 'table') tableBtn.classList.add('active');
      else cardBtn.classList.add('active');

      localStorage.setItem('ordersView', view);
      showSkeleton(view);
      setTimeout(() => hideSkeleton(view), 150);
    }

    document.addEventListener('DOMContentLoaded', () => {
      const savedView = localStorage.getItem('ordersView') || 'table';
      const isMobile = window.innerWidth <= 768;
      const activeView = isMobile ? 'card' : savedView;
      switchView(activeView);
    });


    function toggleSelectAll() {
        const checkbox = document.getElementById('selectAll');
        const checkboxes = document.querySelectorAll('.order-checkbox, .order-checkbox-card');
        checkboxes.forEach(cb => cb.checked = checkbox.checked);
        updateBulkActions();
    }

    function updateBulkActions() {
      const currentView = localStorage.getItem('ordersView') || 'table';
      let orderCheckboxes;
      if (currentView === 'card') {
        orderCheckboxes = document.querySelectorAll('.orders-grid.active .order-checkbox-card:checked');
      } else {
        orderCheckboxes = document.querySelectorAll('.table-container.active .order-checkbox:checked');
      }

      const count = orderCheckboxes.length;
      const bulkActions = document.getElementById('bulkActions');
      const selectedCount = document.getElementById('selectedCount');
      
      if (count > 0) {
        bulkActions.classList.add('active');
        selectedCount.textContent = `${count} order(s) selected`;
      } else {
        bulkActions.classList.remove('active');
        document.getElementById('selectAll').checked = false;
      }
    }

    function clearSelection() {
      document.querySelectorAll('.order-checkbox, .order-checkbox-card').forEach(cb => cb.checked = false);
      document.getElementById('selectAll').checked = false;
      updateBulkActions();
    }

    function getSelectedOrderIds() {
      const currentView = localStorage.getItem('ordersView') || 'table';
      let orderCheckboxes;
      if (currentView === 'card') {
        orderCheckboxes = document.querySelectorAll('.orders-grid.active .order-checkbox-card:checked');
      } else {
        orderCheckboxes = document.querySelectorAll('.table-container.active .order-checkbox:checked');
      }
      return Array.from(orderCheckboxes).map(cb => cb.value);
    }

    function bulkUpdateStatus() {
      const orderIds = getSelectedOrderIds();
      const status = document.getElementById('bulkStatus').value;
      
      if (orderIds.length === 0) {
        showAlert('Please select at least one order.', 'warning', 'No Orders Selected');
        return;
      }
      
      if (!status) {
        showAlert('Please select a status.', 'warning', 'No Status Selected');
        return;
      }
      
      const statusDisplay = status.charAt(0).toUpperCase() + status.slice(1);
      showAlert(
        `Are you sure you want to update ${orderIds.length} order(s) to "${statusDisplay}" status?`,
        "warning", 
        "Bulk Update Status", 
        true,
        function(confirmed) {
          if (confirmed) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '/admin/inventory/orders/bulk-update';
            
            const orderIdsInput = document.createElement('input');
            orderIdsInput.type = 'hidden';
            orderIdsInput.name = 'orderIds';
            orderIdsInput.value = JSON.stringify(orderIds);
            form.appendChild(orderIdsInput);
            
            const statusInput = document.createElement('input');
            statusInput.type = 'hidden';
            statusInput.name = 'status';
            statusInput.value = status;
            form.appendChild(statusInput);
            
            const branchInput = document.createElement('input');
            branchInput.type = 'hidden';
            branchInput.name = 'branchId';
            branchInput.value = '<%= selectedBranch %>';
            form.appendChild(branchInput);
            
            document.body.appendChild(form);
            form.submit();
          }
        }
      );
    }

    function bulkPrintReceipts() {
      const orderIds = getSelectedOrderIds();
      
      if (orderIds.length === 0) {
        showAlert('Please select at least one order to print.', 'warning', 'No Orders Selected');
        return;
      }
      
      if (orderIds.length === 1) {

        window.open(`/admin/inventory/orders/print/${orderIds[0]}`, '_blank');
      } else {

        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '/admin/inventory/orders/bulk-print';
        
        const orderIdsInput = document.createElement('input');
        orderIdsInput.type = 'hidden';
        orderIdsInput.name = 'orderIds';
        orderIdsInput.value = JSON.stringify(orderIds);
        form.appendChild(orderIdsInput);
        
        const branchInput = document.createElement('input');
        branchInput.type = 'hidden';
        branchInput.name = 'branchId';
        branchInput.value = '<%= selectedBranch %>';
        form.appendChild(branchInput);
        
        document.body.appendChild(form);
        form.submit();
      }
    }
    

    function debounce(func, wait) {
      let timeout;
      return function executedFunction(...args) {
        const later = () => {
          clearTimeout(timeout);
          func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    }
    
    async function applyFilters() {
      const currentView = localStorage.getItem('ordersView') || 'table';
      showSkeleton(currentView);
      
      const searchValue = document.getElementById('searchInput').value;
      const orderTypeValue = document.getElementById('orderTypeFilter').value;
      const statusValue = document.getElementById('statusFilter').value;
      
      const params = new URLSearchParams();
      params.set('page', '1');
      params.set('branch', '<%= selectedBranch %>');
      if (searchValue) params.set('search', searchValue);
      if (orderTypeValue) params.set('type', orderTypeValue);
      if (statusValue) params.set('status', statusValue);

      window.location.href = '/admin/inventory/orders?' + params.toString();
    }
    

    function clearFilters() {
      window.location.href = '/admin/inventory/orders?branch=<%= selectedBranch %>';
    }
    

    document.addEventListener('DOMContentLoaded', function() {
      const searchInput = document.getElementById('searchInput');
      const orderTypeFilter = document.getElementById('orderTypeFilter');
      const statusFilter = document.getElementById('statusFilter');
      

      const debouncedSearch = debounce(() => {
        applyFilters();
      }, 300);
      
      searchInput.addEventListener('input', debouncedSearch);
      

      const debouncedFilter = debounce(() => {
        applyFilters();
      }, 300);
      
      orderTypeFilter.addEventListener('change', debouncedFilter);
      statusFilter.addEventListener('change', debouncedFilter);
    });


    document.addEventListener('click', function(e) {
      if (e.target.closest('.delete-order-btn')) {
        const btn = e.target.closest('.delete-order-btn');
        const id = btn.getAttribute('data-id');
        const customer = btn.getAttribute('data-customer');
        confirmDeleteOrder(id, customer);
      }
    });

    function confirmDeleteOrder(orderId, customerName) {
      showAlert(
        `Are you sure you want to delete the order for "${customerName}"? This action cannot be undone.`,
        "warning",
        "Delete Order",
        true, 
        function(confirmed) {
          if (confirmed) {

            const tableForm = document.getElementById(`deleteForm-${orderId}`);
            const cardForm = document.getElementById(`deleteFormCard-${orderId}`);
            const form = tableForm || cardForm;
            if (form) {
              form.submit();
            }
          }
        }
      );
    }

    function showAlert(message, type = "info", title = "Notification", isConfirm = false, callback = null) {
      const modal = document.getElementById("alertModal");
      const icon = document.getElementById("alertIcon");
      const titleElem = document.getElementById("alertTitle");
      const msgElem = document.getElementById("alertMessage");
      const okBtn = document.getElementById("alertOkBtn");
      const cancelBtn = document.getElementById("alertCancelBtn");

      const iconMap = {
        success: "fa-check-circle",
        error: "fa-exclamation-circle",
        warning: "fa-exclamation-triangle",
        info: "fa-info-circle"
      };
      const colorMap = {
        success: "#4CAF50",
        error: "#e53935",
        warning: "#fbc02d",
        info: "#2196f3"
      };

      icon.className = `fas ${iconMap[type] || iconMap.info}`;
      icon.style.color = colorMap[type] || colorMap.info;
      titleElem.textContent = title;
      msgElem.textContent = message;

      modal.style.display = "flex";
      document.body.style.overflow = "hidden";


      if (isConfirm) {
        cancelBtn.style.display = "inline-block";
        okBtn.textContent = "Yes";
        cancelBtn.onclick = () => {
          modal.style.display = "none";
          document.body.style.overflow = "auto";
          if (callback) callback(false);
        };
        okBtn.onclick = () => {
          modal.style.display = "none";
          document.body.style.overflow = "auto";
          if (callback) callback(true);
        };
      } else {
        cancelBtn.style.display = "none";
        okBtn.textContent = "OK";
        okBtn.onclick = () => {
          modal.style.display = "none";
          document.body.style.overflow = "auto";
          if (callback) callback(true);
        };
      }
    }

  </script>

  <!-- Custom Alert Modal -->
  <div id="alertModal" class="modal-overlay" style="display: none;">
    <div class="modal-box">
      <div class="modal-header">
        <i id="alertIcon" class="fas fa-info-circle"></i>
        <h3 id="alertTitle">Notification</h3>
      </div>
      <p id="alertMessage" style="white-space: pre-wrap; text-align: left;"></p>
      <div class="modal-actions">
        <button id="alertCancelBtn" class="btn btn-outline" style="display: none;">Cancel</button>
        <button id="alertOkBtn" class="btn btn-primary">OK</button>
      </div>
    </div>
  </div>
</body>
</html>